=begin
#Power Cloud API

#IBM Power Cloud API for Power Hardware / Infrastructure

The version of the OpenAPI document: 1.0.0
Contact: kylej@us.ibm.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0-beta2

=end

require 'spec_helper'
require 'json'

# Unit tests for IbmCloudPower::PCloudVolumesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PCloudVolumesApi' do
  before do
    # run before each test
    @api_instance = IbmCloudPower::PCloudVolumesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PCloudVolumesApi' do
    it 'should create an instance of PCloudVolumesApi' do
      expect(@api_instance).to be_instance_of(IbmCloudPower::PCloudVolumesApi)
    end
  end

  # unit tests for pcloud_cloudinstances_volumes_delete
  # Delete a cloud instance volume
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param volume_id Volume ID
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'pcloud_cloudinstances_volumes_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_cloudinstances_volumes_get
  # Detailed information of a volume
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param volume_id Volume ID
  # @param [Hash] opts the optional parameters
  # @return [Volume]
  describe 'pcloud_cloudinstances_volumes_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_cloudinstances_volumes_getall
  # List all volumes for this cloud instance
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param [Hash] opts the optional parameters
  # @option opts [String] :affinity A pvmInstance (id or name), limits a volumes list response to only volumes that have affinity to the pvmInstance
  # @return [Volumes]
  describe 'pcloud_cloudinstances_volumes_getall test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_cloudinstances_volumes_post
  # Create a new data volume
  # All regions use Tier 1 (NVMe-based flash storage) or Tier 3 (SSD flash storage) storage types.
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param body Parameters for the creation of a new data volume
  # @param [Hash] opts the optional parameters
  # @return [Volume]
  describe 'pcloud_cloudinstances_volumes_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_cloudinstances_volumes_put
  # Update a cloud instance volume
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param volume_id Volume ID
  # @param body Parameters to update a cloud instance volume
  # @param [Hash] opts the optional parameters
  # @return [Volume]
  describe 'pcloud_cloudinstances_volumes_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_pvminstances_volumes_delete
  # Detach a volume from a PVM Instance
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param volume_id Volume ID
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'pcloud_pvminstances_volumes_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_pvminstances_volumes_get
  # Detailed information of a volume attached to a PVM Instance
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param volume_id Volume ID
  # @param [Hash] opts the optional parameters
  # @return [Volume]
  describe 'pcloud_pvminstances_volumes_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_pvminstances_volumes_getall
  # List all volumes attached to a PVM Instance
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param [Hash] opts the optional parameters
  # @return [Volumes]
  describe 'pcloud_pvminstances_volumes_getall test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_pvminstances_volumes_post
  # Attach a volume to a PVM Instance
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param volume_id Volume ID
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'pcloud_pvminstances_volumes_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_pvminstances_volumes_put
  # Update a volume attached to a PVMInstance
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param volume_id Volume ID
  # @param body Parameters to update a volume attached to a PVMInstance
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'pcloud_pvminstances_volumes_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_pvminstances_volumes_setboot_put
  # Set the PVMInstance volume as the boot volume
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param volume_id Volume ID
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'pcloud_pvminstances_volumes_setboot_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_v2_volumes_clone_post
  # Create a volume clone for specified volumes (version 2)
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param body Parameters for the cloning of volumes
  # @param [Hash] opts the optional parameters
  # @return [CloneTaskReference]
  describe 'pcloud_v2_volumes_clone_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_v2_volumes_clonetasks_get
  # Get the status of a volume clone request for the specified clone task ID
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param clone_task_id Volumes Clone Task ID
  # @param [Hash] opts the optional parameters
  # @return [CloneTaskStatus]
  describe 'pcloud_v2_volumes_clonetasks_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_v2_volumes_post
  # Create multiple data volumes from a single definition
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param body Parameters for creating multiple volumes
  # @param [Hash] opts the optional parameters
  # @return [Volumes]
  describe 'pcloud_v2_volumes_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_volumes_clone_post
  # Create a volume clone for specified volumes (version 1 - depricated)
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param body Parameters for the cloning of volumes
  # @param [Hash] opts the optional parameters
  # @return [VolumesCloneResponse]
  describe 'pcloud_volumes_clone_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

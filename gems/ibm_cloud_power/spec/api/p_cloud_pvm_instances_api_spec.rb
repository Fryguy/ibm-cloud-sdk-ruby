=begin
#Power Cloud API

#IBM Power Cloud API for Power Hardware / Infrastructure

The version of the OpenAPI document: 1.0.0
Contact: kylej@us.ibm.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0-beta2

=end

require 'spec_helper'
require 'json'

# Unit tests for IbmCloudPower::PCloudPVMInstancesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PCloudPVMInstancesApi' do
  before do
    # run before each test
    @api_instance = IbmCloudPower::PCloudPVMInstancesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PCloudPVMInstancesApi' do
    it 'should create an instance of PCloudPVMInstancesApi' do
      expect(@api_instance).to be_instance_of(IbmCloudPower::PCloudPVMInstancesApi)
    end
  end

  # unit tests for pcloud_pvminstances_action_post
  # Perform an action (start stop reboot immediate-shutdown reset) on a PVMInstance
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param body Parameters for the desired action
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'pcloud_pvminstances_action_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_pvminstances_capture_post
  # Capture a PVM instance and create a deployable image
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param body Parameters for the capture PVMInstance
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'pcloud_pvminstances_capture_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_pvminstances_console_post
  # Generate the noVNC console URL
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param [Hash] opts the optional parameters
  # @return [PVMInstanceConsole]
  describe 'pcloud_pvminstances_console_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_pvminstances_delete
  # Delete a PCloud PVM instance
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'pcloud_pvminstances_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_pvminstances_get
  # Get a PVM instance&#39;s current state or information
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param [Hash] opts the optional parameters
  # @return [PVMInstance]
  describe 'pcloud_pvminstances_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_pvminstances_getall
  # Get all the PVM instances for this cloud instance
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param [Hash] opts the optional parameters
  # @return [PVMInstances]
  describe 'pcloud_pvminstances_getall test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_pvminstances_networks_delete
  # Remove all addresses of network from a PVM instance
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param network_id Network ID
  # @param [Hash] opts the optional parameters
  # @option opts [PVMInstanceRemoveNetwork] :body Remove a network from PVM Instance parameters
  # @return [Object]
  describe 'pcloud_pvminstances_networks_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_pvminstances_networks_get
  # Get a PVM instance&#39;s network information
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param network_id Network ID
  # @param [Hash] opts the optional parameters
  # @return [PVMInstanceNetworks]
  describe 'pcloud_pvminstances_networks_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_pvminstances_networks_getall
  # Get all networks for this PVM instance
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param [Hash] opts the optional parameters
  # @return [PVMInstanceNetworks]
  describe 'pcloud_pvminstances_networks_getall test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_pvminstances_networks_post
  # Perform network addition, deletion, and listing
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param body Add network to PVM Instance parameters
  # @param [Hash] opts the optional parameters
  # @return [PVMInstanceNetwork]
  describe 'pcloud_pvminstances_networks_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_pvminstances_operations_post
  # Perform an operation on a PVMInstance
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param body Parameters for the desired operations
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'pcloud_pvminstances_operations_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_pvminstances_post
  # Create a new PVM instance
  # The order of network IDs passed in will be the order of interfaces defined to the VM.
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param body Parameters for the creation of a new tenant
  # @param [Hash] opts the optional parameters
  # @return [Array<PVMInstance>]
  describe 'pcloud_pvminstances_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_pvminstances_put
  # Update a PCloud PVM instance
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param body Parameters to update a PCloud PVM instance
  # @param [Hash] opts the optional parameters
  # @return [PVMInstanceUpdateResponse]
  describe 'pcloud_pvminstances_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_pvminstances_snapshots_getall
  # Get all snapshots for this PVM instance
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param [Hash] opts the optional parameters
  # @return [Snapshots]
  describe 'pcloud_pvminstances_snapshots_getall test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_pvminstances_snapshots_post
  # Create a PVM instance snapshot
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param body PVM Instance snapshot create parameters
  # @param [Hash] opts the optional parameters
  # @return [SnapshotCreateResponse]
  describe 'pcloud_pvminstances_snapshots_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pcloud_pvminstances_snapshots_restore_post
  # Restore a PVM Instance snapshot
  # To roll back the clone operation, append &#39;?restore_fail_action&#x3D;rollback&#39; to the cURL URL. If you&#39;d like to try the clone operation again, append &#39;?restore_fail_action&#x3D;retry&#39; to the cURL URL.
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param snapshot_id PVM Instance snapshot id
  # @param body PVM Instance snapshot restore parameters
  # @param [Hash] opts the optional parameters
  # @option opts [String] :restore_fail_action Action to take on a failed snapshot restore
  # @return [nil]
  describe 'pcloud_pvminstances_snapshots_restore_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

=begin
#IBM Cloud Resource Controller API

#Manage lifecycle of your Cloud resources using Resource Controller APIs. Resources are provisioned globally in an account scope. Supports asynchronous provisioning of resources. Enables consumption of a global resource through a Cloud Foundry space in any region.

The version of the OpenAPI document: 2.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0-beta2

=end

require 'spec_helper'
require 'json'

# Unit tests for IbmCloudResourceController::ResourceInstancesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ResourceInstancesApi' do
  before do
    # run before each test
    @api_instance = IbmCloudResourceController::ResourceInstancesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ResourceInstancesApi' do
    it 'should create an instance of ResourceInstancesApi' do
      expect(@api_instance).to be_instance_of(IbmCloudResourceController::ResourceInstancesApi)
    end
  end

  # unit tests for create_resource_instance
  # Create (provision) a new resource instance
  # Provision a new resource in the specified location for the selected plan.
  # @param resource_instance_post 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :entity_lock Indicates if the resource instance is locked for further update or delete operations. It does not affect actions performed on child resources like aliases, bindings or keys. False by default.
  # @return [ResourceInstance]
  describe 'create_resource_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_resource_instance
  # Delete a resource instance
  # Delete a resource instance by ID.
  # @param id The short or long ID of the instance.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_resource_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_resource_instance
  # Get a resource instance
  # Retrieve a resource instance by ID.
  # @param id The short or long ID of the instance.
  # @param [Hash] opts the optional parameters
  # @return [ResourceInstance]
  describe 'get_resource_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_resource_instances
  # Get a list of all resource instances
  # Get a list of all resource instances.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :guid When you provision a new resource in the specified location for the selected plan, a GUID (globally unique identifier) is created. This is a unique internal GUID managed by Resource controller that corresponds to the instance.
  # @option opts [String] :name The human-readable name of the instance.
  # @option opts [String] :resource_group_id Short ID of a resource group.
  # @option opts [String] :resource_id The unique ID of the offering. This value is provided by and stored in the global catalog.
  # @option opts [String] :resource_plan_id The unique ID of the plan associated with the offering. This value is provided by and stored in the global catalog.
  # @option opts [String] :type The type of the instance. For example, &#x60;service_instance&#x60;.
  # @option opts [String] :sub_type The sub-type of instance, e.g. &#x60;cfaas&#x60;.
  # @option opts [String] :limit Limit on how many items should be returned.
  # @option opts [String] :updated_from Start date inclusive filter.
  # @option opts [String] :updated_to End date inclusive filter.
  # @return [ResourceInstancesList]
  describe 'list_resource_instances test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for lock_resource_instance
  # Lock a resource instance
  # Locks a resource instance by ID. A locked instance can not be updated or deleted. It does not affect actions performed on child resources like aliases, bindings or keys.
  # @param id The short or long ID of the instance.
  # @param [Hash] opts the optional parameters
  # @return [ResourceInstance]
  describe 'lock_resource_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for unlock_resource_instance
  # Unlock a resource instance
  # Unlocks a resource instance by ID.
  # @param id The short or long ID of the instance.
  # @param [Hash] opts the optional parameters
  # @return [ResourceInstance]
  describe 'unlock_resource_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_resource_instance
  # Update a resource instance
  # Update a resource instance by ID.
  # @param id The short or long ID of the instance.
  # @param resource_instance_patch 
  # @param [Hash] opts the optional parameters
  # @return [ResourceInstance]
  describe 'update_resource_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

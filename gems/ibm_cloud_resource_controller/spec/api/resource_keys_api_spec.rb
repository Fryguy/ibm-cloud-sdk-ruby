=begin
#IBM Cloud Resource Controller API

#Manage lifecycle of your Cloud resources using Resource Controller APIs. Resources are provisioned globally in an account scope. Supports asynchronous provisioning of resources. Enables consumption of a global resource through a Cloud Foundry space in any region.

The version of the OpenAPI document: 2.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0-beta2

=end

require 'spec_helper'
require 'json'

# Unit tests for IbmCloudResourceController::ResourceKeysApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ResourceKeysApi' do
  before do
    # run before each test
    @api_instance = IbmCloudResourceController::ResourceKeysApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ResourceKeysApi' do
    it 'should create an instance of ResourceKeysApi' do
      expect(@api_instance).to be_instance_of(IbmCloudResourceController::ResourceKeysApi)
    end
  end

  # unit tests for create_resource_key
  # Create a new resource key
  # Create a new resource key.
  # @param resource_key_post 
  # @param [Hash] opts the optional parameters
  # @return [ResourceKey]
  describe 'create_resource_key test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_resource_key
  # Delete a resource key by ID
  # Delete a resource key by ID.
  # @param id The short or long ID of the key.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_resource_key test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_resource_key
  # Get resource key by ID
  # Get resource key by ID.
  # @param id The short or long ID of the key.
  # @param [Hash] opts the optional parameters
  # @return [ResourceKey]
  describe 'get_resource_key test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_resource_keys
  # Get a list of all of the resource keys.
  # List all resource keys.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :guid When you create a new key, a GUID (globally unique identifier) is assigned. This is a unique internal GUID managed by Resource controller that corresponds to the key.
  # @option opts [String] :name The human-readable name of the key.
  # @option opts [String] :resource_group_id The short ID of the resource group.
  # @option opts [String] :resource_id The unique ID of the offering. This value is provided by and stored in the global catalog.
  # @option opts [String] :limit Limit on how many items should be returned.
  # @option opts [String] :updated_from Start date inclusive filter.
  # @option opts [String] :updated_to End date inclusive filter.
  # @return [ResourceKeysList]
  describe 'list_resource_keys test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_resource_key
  # Update a resource key
  # Update a resource key by ID.
  # @param id The short or long ID of the key.
  # @param resource_key_patch 
  # @param [Hash] opts the optional parameters
  # @return [ResourceKey]
  describe 'update_resource_key test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

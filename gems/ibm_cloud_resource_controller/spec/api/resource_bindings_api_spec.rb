=begin
#IBM Cloud Resource Controller API

#Manage lifecycle of your Cloud resources using Resource Controller APIs. Resources are provisioned globally in an account scope. Supports asynchronous provisioning of resources. Enables consumption of a global resource through a Cloud Foundry space in any region.

The version of the OpenAPI document: 2.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0-beta2

=end

require 'spec_helper'
require 'json'

# Unit tests for IbmCloudResourceController::ResourceBindingsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ResourceBindingsApi' do
  before do
    # run before each test
    @api_instance = IbmCloudResourceController::ResourceBindingsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ResourceBindingsApi' do
    it 'should create an instance of ResourceBindingsApi' do
      expect(@api_instance).to be_instance_of(IbmCloudResourceController::ResourceBindingsApi)
    end
  end

  # unit tests for create_resource_binding
  # Create a new resource binding
  # Create a new resource binding.
  # @param resource_binding_post 
  # @param [Hash] opts the optional parameters
  # @return [ResourceBinding]
  describe 'create_resource_binding test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_resource_binding
  # Delete a resource binding
  # Delete a resource binding by ID
  # @param id The short or long ID of the binding.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_resource_binding test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_resource_binding
  # Get a resource binding
  # Retrieve a resource binding by ID.
  # @param id The short or long ID of the binding.
  # @param [Hash] opts the optional parameters
  # @return [ResourceBinding]
  describe 'get_resource_binding test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_resource_bindings
  # Get a list of all resource bindings
  # Get a list of all resource bindings.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :guid The short ID of the binding.
  # @option opts [String] :name The human-readable name of the binding.
  # @option opts [String] :resource_group_id Short ID of the resource group.
  # @option opts [String] :resource_id The unique ID of the offering (service name). This value is provided by and stored in the global catalog.
  # @option opts [String] :region_binding_id Short ID of the binding in the specific targeted environment, e.g. service_binding_id in a given IBM Cloud environment.
  # @option opts [String] :limit Limit on how many items should be returned
  # @option opts [String] :updated_from Start date inclusive filter.
  # @option opts [String] :updated_to End date inclusive filter.
  # @return [ResourceBindingsList]
  describe 'list_resource_bindings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_resource_binding
  # Update a resource binding
  # Update a resource binding by ID.
  # @param id The short or long ID of the binding.
  # @param resource_binding_patch 
  # @param [Hash] opts the optional parameters
  # @return [ResourceBinding]
  describe 'update_resource_binding test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

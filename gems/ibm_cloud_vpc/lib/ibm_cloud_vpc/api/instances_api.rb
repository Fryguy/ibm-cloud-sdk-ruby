=begin
#Virtual Private Cloud API

#The IBM Cloud Virtual Private Cloud (VPC) API can be used to programmatically provision and manage infrastructure resources, including virtual server instances, subnets, volumes, and load balancers.

The version of the OpenAPI document: 2020-09-08

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0-beta2

=end

require 'cgi'

module IbmCloudVpc
  class InstancesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Associate a floating IP with a network interface
    # This request associates the specified floating IP with the specified network interface, replacing any existing association. For this request to succeed, the existing floating IP must not be required by another resource, such as a public gateway. A request body is not required, and if supplied, is ignored.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param network_interface_id [String] The network interface identifier
    # @param id [String] The floating IP identifier
    # @param [Hash] opts the optional parameters
    # @return [FloatingIP]
    def add_instance_network_interface_floating_ip(version, generation, instance_id, network_interface_id, id, opts = {})
      data, _status_code, _headers = add_instance_network_interface_floating_ip_with_http_info(version, generation, instance_id, network_interface_id, id, opts)
      data
    end

    # Associate a floating IP with a network interface
    # This request associates the specified floating IP with the specified network interface, replacing any existing association. For this request to succeed, the existing floating IP must not be required by another resource, such as a public gateway. A request body is not required, and if supplied, is ignored.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param network_interface_id [String] The network interface identifier
    # @param id [String] The floating IP identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(FloatingIP, Integer, Hash)>] FloatingIP data, response status code and response headers
    def add_instance_network_interface_floating_ip_with_http_info(version, generation, instance_id, network_interface_id, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.add_instance_network_interface_floating_ip ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.add_instance_network_interface_floating_ip"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.add_instance_network_interface_floating_ip, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.add_instance_network_interface_floating_ip"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'instance_id' is set
      if @api_client.config.client_side_validation && instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'instance_id' when calling InstancesApi.add_instance_network_interface_floating_ip"
      end
      # verify the required parameter 'network_interface_id' is set
      if @api_client.config.client_side_validation && network_interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'network_interface_id' when calling InstancesApi.add_instance_network_interface_floating_ip"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling InstancesApi.add_instance_network_interface_floating_ip"
      end
      # resource path
      local_var_path = '/instances/{instance_id}/network_interfaces/{network_interface_id}/floating_ips/{id}'.sub('{' + 'instance_id' + '}', CGI.escape(instance_id.to_s)).sub('{' + 'network_interface_id' + '}', CGI.escape(network_interface_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'FloatingIP' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PUT, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#add_instance_network_interface_floating_ip\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create an instance
    # This request provisions a new instance from an instance prototype object. The prototype object is structured in the same way as a retrieved instance, and contains the information necessary to provision the new instance. The instance is automatically started.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_prototype [InstancePrototype] The instance prototype object
    # @param [Hash] opts the optional parameters
    # @return [Instance]
    def create_instance(version, generation, instance_prototype, opts = {})
      data, _status_code, _headers = create_instance_with_http_info(version, generation, instance_prototype, opts)
      data
    end

    # Create an instance
    # This request provisions a new instance from an instance prototype object. The prototype object is structured in the same way as a retrieved instance, and contains the information necessary to provision the new instance. The instance is automatically started.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_prototype [InstancePrototype] The instance prototype object
    # @param [Hash] opts the optional parameters
    # @return [Array<(Instance, Integer, Hash)>] Instance data, response status code and response headers
    def create_instance_with_http_info(version, generation, instance_prototype, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.create_instance ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.create_instance"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.create_instance, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.create_instance"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'instance_prototype' is set
      if @api_client.config.client_side_validation && instance_prototype.nil?
        fail ArgumentError, "Missing the required parameter 'instance_prototype' when calling InstancesApi.create_instance"
      end
      # resource path
      local_var_path = '/instances'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(instance_prototype) 

      # return_type
      return_type = opts[:return_type] || 'Instance' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#create_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create an instance action
    # This request creates a new action which will be queued up to run as soon as any pending or running actions have completed.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param instance_action_prototype [InstanceActionPrototype] The instance action prototype patch
    # @param [Hash] opts the optional parameters
    # @return [InstanceAction]
    def create_instance_action(version, generation, instance_id, instance_action_prototype, opts = {})
      data, _status_code, _headers = create_instance_action_with_http_info(version, generation, instance_id, instance_action_prototype, opts)
      data
    end

    # Create an instance action
    # This request creates a new action which will be queued up to run as soon as any pending or running actions have completed.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param instance_action_prototype [InstanceActionPrototype] The instance action prototype patch
    # @param [Hash] opts the optional parameters
    # @return [Array<(InstanceAction, Integer, Hash)>] InstanceAction data, response status code and response headers
    def create_instance_action_with_http_info(version, generation, instance_id, instance_action_prototype, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.create_instance_action ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.create_instance_action"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.create_instance_action, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.create_instance_action"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'instance_id' is set
      if @api_client.config.client_side_validation && instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'instance_id' when calling InstancesApi.create_instance_action"
      end
      # verify the required parameter 'instance_action_prototype' is set
      if @api_client.config.client_side_validation && instance_action_prototype.nil?
        fail ArgumentError, "Missing the required parameter 'instance_action_prototype' when calling InstancesApi.create_instance_action"
      end
      # resource path
      local_var_path = '/instances/{instance_id}/actions'.sub('{' + 'instance_id' + '}', CGI.escape(instance_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(instance_action_prototype) 

      # return_type
      return_type = opts[:return_type] || 'InstanceAction' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#create_instance_action\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create a network interface
    # This request creates a new network interface from a network interface prototype object. The prototype object is structured in the same way as a retrieved network interface, and contains the information necessary to create the new network interface. Any subnet in the instance's VPC may be specified, even if it is already attached to another network interface. Addresses on the network interface must be within the specified subnet's CIDR blocks.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param network_interface_prototype [NetworkInterfacePrototype] The network interface prototype object
    # @param [Hash] opts the optional parameters
    # @return [NetworkInterface]
    def create_instance_network_interface(version, generation, instance_id, network_interface_prototype, opts = {})
      data, _status_code, _headers = create_instance_network_interface_with_http_info(version, generation, instance_id, network_interface_prototype, opts)
      data
    end

    # Create a network interface
    # This request creates a new network interface from a network interface prototype object. The prototype object is structured in the same way as a retrieved network interface, and contains the information necessary to create the new network interface. Any subnet in the instance&#39;s VPC may be specified, even if it is already attached to another network interface. Addresses on the network interface must be within the specified subnet&#39;s CIDR blocks.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param network_interface_prototype [NetworkInterfacePrototype] The network interface prototype object
    # @param [Hash] opts the optional parameters
    # @return [Array<(NetworkInterface, Integer, Hash)>] NetworkInterface data, response status code and response headers
    def create_instance_network_interface_with_http_info(version, generation, instance_id, network_interface_prototype, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.create_instance_network_interface ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.create_instance_network_interface"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.create_instance_network_interface, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.create_instance_network_interface"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'instance_id' is set
      if @api_client.config.client_side_validation && instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'instance_id' when calling InstancesApi.create_instance_network_interface"
      end
      # verify the required parameter 'network_interface_prototype' is set
      if @api_client.config.client_side_validation && network_interface_prototype.nil?
        fail ArgumentError, "Missing the required parameter 'network_interface_prototype' when calling InstancesApi.create_instance_network_interface"
      end
      # resource path
      local_var_path = '/instances/{instance_id}/network_interfaces'.sub('{' + 'instance_id' + '}', CGI.escape(instance_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(network_interface_prototype) 

      # return_type
      return_type = opts[:return_type] || 'NetworkInterface' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#create_instance_network_interface\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create an instance template
    # This request creates a new instance template
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_template_prototype [InstanceTemplatePrototype] The instance template prototype object
    # @param [Hash] opts the optional parameters
    # @return [InstanceTemplate]
    def create_instance_template(version, generation, instance_template_prototype, opts = {})
      data, _status_code, _headers = create_instance_template_with_http_info(version, generation, instance_template_prototype, opts)
      data
    end

    # Create an instance template
    # This request creates a new instance template
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_template_prototype [InstanceTemplatePrototype] The instance template prototype object
    # @param [Hash] opts the optional parameters
    # @return [Array<(InstanceTemplate, Integer, Hash)>] InstanceTemplate data, response status code and response headers
    def create_instance_template_with_http_info(version, generation, instance_template_prototype, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.create_instance_template ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.create_instance_template"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.create_instance_template, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.create_instance_template"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'instance_template_prototype' is set
      if @api_client.config.client_side_validation && instance_template_prototype.nil?
        fail ArgumentError, "Missing the required parameter 'instance_template_prototype' when calling InstancesApi.create_instance_template"
      end
      # resource path
      local_var_path = '/instance/templates'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(instance_template_prototype) 

      # return_type
      return_type = opts[:return_type] || 'InstanceTemplate' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#create_instance_template\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create a volume attachment, connecting a volume to an instance
    # This request creates a new volume attachment from a volume attachment prototype object. The prototype object is structured in the same way as a retrieved volume attachment, and contains the information necessary to create the new volume attachment. The creation of a new volume attachment connects a volume to an instance.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param volume_attachment_prototype [VolumeAttachmentPrototype] The volume attachment prototype object
    # @param [Hash] opts the optional parameters
    # @return [VolumeAttachment]
    def create_instance_volume_attachment(version, generation, instance_id, volume_attachment_prototype, opts = {})
      data, _status_code, _headers = create_instance_volume_attachment_with_http_info(version, generation, instance_id, volume_attachment_prototype, opts)
      data
    end

    # Create a volume attachment, connecting a volume to an instance
    # This request creates a new volume attachment from a volume attachment prototype object. The prototype object is structured in the same way as a retrieved volume attachment, and contains the information necessary to create the new volume attachment. The creation of a new volume attachment connects a volume to an instance.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param volume_attachment_prototype [VolumeAttachmentPrototype] The volume attachment prototype object
    # @param [Hash] opts the optional parameters
    # @return [Array<(VolumeAttachment, Integer, Hash)>] VolumeAttachment data, response status code and response headers
    def create_instance_volume_attachment_with_http_info(version, generation, instance_id, volume_attachment_prototype, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.create_instance_volume_attachment ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.create_instance_volume_attachment"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.create_instance_volume_attachment, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.create_instance_volume_attachment"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'instance_id' is set
      if @api_client.config.client_side_validation && instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'instance_id' when calling InstancesApi.create_instance_volume_attachment"
      end
      # verify the required parameter 'volume_attachment_prototype' is set
      if @api_client.config.client_side_validation && volume_attachment_prototype.nil?
        fail ArgumentError, "Missing the required parameter 'volume_attachment_prototype' when calling InstancesApi.create_instance_volume_attachment"
      end
      # resource path
      local_var_path = '/instances/{instance_id}/volume_attachments'.sub('{' + 'instance_id' + '}', CGI.escape(instance_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(volume_attachment_prototype) 

      # return_type
      return_type = opts[:return_type] || 'VolumeAttachment' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#create_instance_volume_attachment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete specified instance
    # This request deletes an instance. This operation cannot be reversed. Any floating IPs associated with the instance's network interfaces are implicitly disassociated. All flow log collectors with `auto_delete` set to `true` targeting the instance and/or the instance's network interfaces are automatically deleted.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The instance identifier
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_instance(version, generation, id, opts = {})
      delete_instance_with_http_info(version, generation, id, opts)
      nil
    end

    # Delete specified instance
    # This request deletes an instance. This operation cannot be reversed. Any floating IPs associated with the instance&#39;s network interfaces are implicitly disassociated. All flow log collectors with &#x60;auto_delete&#x60; set to &#x60;true&#x60; targeting the instance and/or the instance&#39;s network interfaces are automatically deleted.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The instance identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_instance_with_http_info(version, generation, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.delete_instance ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.delete_instance"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.delete_instance, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.delete_instance"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling InstancesApi.delete_instance"
      end
      # resource path
      local_var_path = '/instances/{id}'.sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#delete_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete specified network interface
    # This request deletes a network interface. This operation cannot be reversed. Any floating IPs associated with the network interface are implicitly disassociated. All flow log collectors with `auto_delete` set to `true` targeting the network interface are automatically deleted. The primary network interface is not allowed to be deleted.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param id [String] The network interface identifier
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_instance_network_interface(version, generation, instance_id, id, opts = {})
      delete_instance_network_interface_with_http_info(version, generation, instance_id, id, opts)
      nil
    end

    # Delete specified network interface
    # This request deletes a network interface. This operation cannot be reversed. Any floating IPs associated with the network interface are implicitly disassociated. All flow log collectors with &#x60;auto_delete&#x60; set to &#x60;true&#x60; targeting the network interface are automatically deleted. The primary network interface is not allowed to be deleted.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param id [String] The network interface identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_instance_network_interface_with_http_info(version, generation, instance_id, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.delete_instance_network_interface ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.delete_instance_network_interface"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.delete_instance_network_interface, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.delete_instance_network_interface"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'instance_id' is set
      if @api_client.config.client_side_validation && instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'instance_id' when calling InstancesApi.delete_instance_network_interface"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling InstancesApi.delete_instance_network_interface"
      end
      # resource path
      local_var_path = '/instances/{instance_id}/network_interfaces/{id}'.sub('{' + 'instance_id' + '}', CGI.escape(instance_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#delete_instance_network_interface\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete specified instance template
    # This request deletes the instance template. This operation cannot be reversed.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The instance template identifier
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_instance_template(version, generation, id, opts = {})
      delete_instance_template_with_http_info(version, generation, id, opts)
      nil
    end

    # Delete specified instance template
    # This request deletes the instance template. This operation cannot be reversed.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The instance template identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_instance_template_with_http_info(version, generation, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.delete_instance_template ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.delete_instance_template"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.delete_instance_template, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.delete_instance_template"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling InstancesApi.delete_instance_template"
      end
      # resource path
      local_var_path = '/instance/templates/{id}'.sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#delete_instance_template\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete a volume attachment, detaching a volume from an instance
    # This request deletes a volume attachment. The deletion of a volume attachment detaches a volume from an instance.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param id [String] The volume attachment identifier
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_instance_volume_attachment(version, generation, instance_id, id, opts = {})
      delete_instance_volume_attachment_with_http_info(version, generation, instance_id, id, opts)
      nil
    end

    # Delete a volume attachment, detaching a volume from an instance
    # This request deletes a volume attachment. The deletion of a volume attachment detaches a volume from an instance.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param id [String] The volume attachment identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_instance_volume_attachment_with_http_info(version, generation, instance_id, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.delete_instance_volume_attachment ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.delete_instance_volume_attachment"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.delete_instance_volume_attachment, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.delete_instance_volume_attachment"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'instance_id' is set
      if @api_client.config.client_side_validation && instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'instance_id' when calling InstancesApi.delete_instance_volume_attachment"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling InstancesApi.delete_instance_volume_attachment"
      end
      # resource path
      local_var_path = '/instances/{instance_id}/volume_attachments/{id}'.sub('{' + 'instance_id' + '}', CGI.escape(instance_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#delete_instance_volume_attachment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve an instance
    # This request retrieves a single instance specified by the identifier in the URL.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The instance identifier
    # @param [Hash] opts the optional parameters
    # @return [Instance]
    def get_instance(version, generation, id, opts = {})
      data, _status_code, _headers = get_instance_with_http_info(version, generation, id, opts)
      data
    end

    # Retrieve an instance
    # This request retrieves a single instance specified by the identifier in the URL.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The instance identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(Instance, Integer, Hash)>] Instance data, response status code and response headers
    def get_instance_with_http_info(version, generation, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.get_instance ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.get_instance"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.get_instance, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.get_instance"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling InstancesApi.get_instance"
      end
      # resource path
      local_var_path = '/instances/{id}'.sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'Instance' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#get_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve configuration used to initialize the instance.
    # This request retrieves configuration variables used to initialize the instance, such as SSH keys and the Windows administrator password.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The instance identifier
    # @param [Hash] opts the optional parameters
    # @return [InstanceInitialization]
    def get_instance_initialization(version, generation, id, opts = {})
      data, _status_code, _headers = get_instance_initialization_with_http_info(version, generation, id, opts)
      data
    end

    # Retrieve configuration used to initialize the instance.
    # This request retrieves configuration variables used to initialize the instance, such as SSH keys and the Windows administrator password.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The instance identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(InstanceInitialization, Integer, Hash)>] InstanceInitialization data, response status code and response headers
    def get_instance_initialization_with_http_info(version, generation, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.get_instance_initialization ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.get_instance_initialization"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.get_instance_initialization, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.get_instance_initialization"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling InstancesApi.get_instance_initialization"
      end
      # resource path
      local_var_path = '/instances/{id}/initialization'.sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'InstanceInitialization' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#get_instance_initialization\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve specified network interface
    # This request retrieves a single network interface specified by the identifier in the URL.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param id [String] The network interface identifier
    # @param [Hash] opts the optional parameters
    # @return [NetworkInterface]
    def get_instance_network_interface(version, generation, instance_id, id, opts = {})
      data, _status_code, _headers = get_instance_network_interface_with_http_info(version, generation, instance_id, id, opts)
      data
    end

    # Retrieve specified network interface
    # This request retrieves a single network interface specified by the identifier in the URL.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param id [String] The network interface identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(NetworkInterface, Integer, Hash)>] NetworkInterface data, response status code and response headers
    def get_instance_network_interface_with_http_info(version, generation, instance_id, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.get_instance_network_interface ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.get_instance_network_interface"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.get_instance_network_interface, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.get_instance_network_interface"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'instance_id' is set
      if @api_client.config.client_side_validation && instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'instance_id' when calling InstancesApi.get_instance_network_interface"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling InstancesApi.get_instance_network_interface"
      end
      # resource path
      local_var_path = '/instances/{instance_id}/network_interfaces/{id}'.sub('{' + 'instance_id' + '}', CGI.escape(instance_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'NetworkInterface' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#get_instance_network_interface\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve associated floating IP
    # This request a retrieves a specified floating IP address if it is associated with the network interface and instance specified in the URL
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param network_interface_id [String] The network interface identifier
    # @param id [String] The floating IP identifier
    # @param [Hash] opts the optional parameters
    # @return [FloatingIP]
    def get_instance_network_interface_floating_ip(version, generation, instance_id, network_interface_id, id, opts = {})
      data, _status_code, _headers = get_instance_network_interface_floating_ip_with_http_info(version, generation, instance_id, network_interface_id, id, opts)
      data
    end

    # Retrieve associated floating IP
    # This request a retrieves a specified floating IP address if it is associated with the network interface and instance specified in the URL
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param network_interface_id [String] The network interface identifier
    # @param id [String] The floating IP identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(FloatingIP, Integer, Hash)>] FloatingIP data, response status code and response headers
    def get_instance_network_interface_floating_ip_with_http_info(version, generation, instance_id, network_interface_id, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.get_instance_network_interface_floating_ip ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.get_instance_network_interface_floating_ip"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.get_instance_network_interface_floating_ip, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.get_instance_network_interface_floating_ip"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'instance_id' is set
      if @api_client.config.client_side_validation && instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'instance_id' when calling InstancesApi.get_instance_network_interface_floating_ip"
      end
      # verify the required parameter 'network_interface_id' is set
      if @api_client.config.client_side_validation && network_interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'network_interface_id' when calling InstancesApi.get_instance_network_interface_floating_ip"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling InstancesApi.get_instance_network_interface_floating_ip"
      end
      # resource path
      local_var_path = '/instances/{instance_id}/network_interfaces/{network_interface_id}/floating_ips/{id}'.sub('{' + 'instance_id' + '}', CGI.escape(instance_id.to_s)).sub('{' + 'network_interface_id' + '}', CGI.escape(network_interface_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'FloatingIP' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#get_instance_network_interface_floating_ip\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve specified instance profile
    # This request retrieves a single instance profile specified by the name in the URL.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param name [String] The instance profile name
    # @param [Hash] opts the optional parameters
    # @return [InstanceProfile]
    def get_instance_profile(version, generation, name, opts = {})
      data, _status_code, _headers = get_instance_profile_with_http_info(version, generation, name, opts)
      data
    end

    # Retrieve specified instance profile
    # This request retrieves a single instance profile specified by the name in the URL.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param name [String] The instance profile name
    # @param [Hash] opts the optional parameters
    # @return [Array<(InstanceProfile, Integer, Hash)>] InstanceProfile data, response status code and response headers
    def get_instance_profile_with_http_info(version, generation, name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.get_instance_profile ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.get_instance_profile"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.get_instance_profile, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.get_instance_profile"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling InstancesApi.get_instance_profile"
      end
      # resource path
      local_var_path = '/instance/profiles/{name}'.sub('{' + 'name' + '}', CGI.escape(name.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'InstanceProfile' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#get_instance_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve specified instance template
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The instance template identifier
    # @param [Hash] opts the optional parameters
    # @return [InstanceTemplate]
    def get_instance_template(version, generation, id, opts = {})
      data, _status_code, _headers = get_instance_template_with_http_info(version, generation, id, opts)
      data
    end

    # Retrieve specified instance template
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The instance template identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(InstanceTemplate, Integer, Hash)>] InstanceTemplate data, response status code and response headers
    def get_instance_template_with_http_info(version, generation, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.get_instance_template ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.get_instance_template"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.get_instance_template, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.get_instance_template"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling InstancesApi.get_instance_template"
      end
      # resource path
      local_var_path = '/instance/templates/{id}'.sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'InstanceTemplate' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#get_instance_template\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve specified volume attachment
    # This request retrieves a single volume attachment specified by the identifier in the URL.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param id [String] The volume attachment identifier
    # @param [Hash] opts the optional parameters
    # @return [VolumeAttachment]
    def get_instance_volume_attachment(version, generation, instance_id, id, opts = {})
      data, _status_code, _headers = get_instance_volume_attachment_with_http_info(version, generation, instance_id, id, opts)
      data
    end

    # Retrieve specified volume attachment
    # This request retrieves a single volume attachment specified by the identifier in the URL.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param id [String] The volume attachment identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(VolumeAttachment, Integer, Hash)>] VolumeAttachment data, response status code and response headers
    def get_instance_volume_attachment_with_http_info(version, generation, instance_id, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.get_instance_volume_attachment ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.get_instance_volume_attachment"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.get_instance_volume_attachment, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.get_instance_volume_attachment"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'instance_id' is set
      if @api_client.config.client_side_validation && instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'instance_id' when calling InstancesApi.get_instance_volume_attachment"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling InstancesApi.get_instance_volume_attachment"
      end
      # resource path
      local_var_path = '/instances/{instance_id}/volume_attachments/{id}'.sub('{' + 'instance_id' + '}', CGI.escape(instance_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'VolumeAttachment' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#get_instance_volume_attachment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List all floating IPs associated with a network interface
    # This request lists all floating IPs associated with a network interface.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param network_interface_id [String] The network interface identifier
    # @param [Hash] opts the optional parameters
    # @return [FloatingIPUnpaginatedCollection]
    def list_instance_network_interface_floating_ips(version, generation, instance_id, network_interface_id, opts = {})
      data, _status_code, _headers = list_instance_network_interface_floating_ips_with_http_info(version, generation, instance_id, network_interface_id, opts)
      data
    end

    # List all floating IPs associated with a network interface
    # This request lists all floating IPs associated with a network interface.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param network_interface_id [String] The network interface identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(FloatingIPUnpaginatedCollection, Integer, Hash)>] FloatingIPUnpaginatedCollection data, response status code and response headers
    def list_instance_network_interface_floating_ips_with_http_info(version, generation, instance_id, network_interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.list_instance_network_interface_floating_ips ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.list_instance_network_interface_floating_ips"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.list_instance_network_interface_floating_ips, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.list_instance_network_interface_floating_ips"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'instance_id' is set
      if @api_client.config.client_side_validation && instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'instance_id' when calling InstancesApi.list_instance_network_interface_floating_ips"
      end
      # verify the required parameter 'network_interface_id' is set
      if @api_client.config.client_side_validation && network_interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'network_interface_id' when calling InstancesApi.list_instance_network_interface_floating_ips"
      end
      # resource path
      local_var_path = '/instances/{instance_id}/network_interfaces/{network_interface_id}/floating_ips'.sub('{' + 'instance_id' + '}', CGI.escape(instance_id.to_s)).sub('{' + 'network_interface_id' + '}', CGI.escape(network_interface_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'FloatingIPUnpaginatedCollection' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#list_instance_network_interface_floating_ips\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List all network interfaces on an instance
    # This request lists all network interfaces on an instance. A network interface is an abstract representation of a network interface card and connects an instance to a subnet. While each network interface can attach to only one subnet, multiple network interfaces can be created to attach to multiple subnets. Multiple interfaces may also attach to the same subnet.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param [Hash] opts the optional parameters
    # @return [NetworkInterfaceUnpaginatedCollection]
    def list_instance_network_interfaces(version, generation, instance_id, opts = {})
      data, _status_code, _headers = list_instance_network_interfaces_with_http_info(version, generation, instance_id, opts)
      data
    end

    # List all network interfaces on an instance
    # This request lists all network interfaces on an instance. A network interface is an abstract representation of a network interface card and connects an instance to a subnet. While each network interface can attach to only one subnet, multiple network interfaces can be created to attach to multiple subnets. Multiple interfaces may also attach to the same subnet.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(NetworkInterfaceUnpaginatedCollection, Integer, Hash)>] NetworkInterfaceUnpaginatedCollection data, response status code and response headers
    def list_instance_network_interfaces_with_http_info(version, generation, instance_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.list_instance_network_interfaces ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.list_instance_network_interfaces"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.list_instance_network_interfaces, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.list_instance_network_interfaces"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'instance_id' is set
      if @api_client.config.client_side_validation && instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'instance_id' when calling InstancesApi.list_instance_network_interfaces"
      end
      # resource path
      local_var_path = '/instances/{instance_id}/network_interfaces'.sub('{' + 'instance_id' + '}', CGI.escape(instance_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'NetworkInterfaceUnpaginatedCollection' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#list_instance_network_interfaces\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List all instance profiles
    # This request lists all instance profiles available in the region. An instance profile specifies the performance characteristics and pricing model for an instance.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param [Hash] opts the optional parameters
    # @return [InstanceProfileCollection]
    def list_instance_profiles(version, generation, opts = {})
      data, _status_code, _headers = list_instance_profiles_with_http_info(version, generation, opts)
      data
    end

    # List all instance profiles
    # This request lists all instance profiles available in the region. An instance profile specifies the performance characteristics and pricing model for an instance.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param [Hash] opts the optional parameters
    # @return [Array<(InstanceProfileCollection, Integer, Hash)>] InstanceProfileCollection data, response status code and response headers
    def list_instance_profiles_with_http_info(version, generation, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.list_instance_profiles ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.list_instance_profiles"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.list_instance_profiles, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.list_instance_profiles"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # resource path
      local_var_path = '/instance/profiles'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'InstanceProfileCollection' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#list_instance_profiles\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get instance templates.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param [Hash] opts the optional parameters
    # @return [InstanceTemplateCollection]
    def list_instance_templates(version, generation, opts = {})
      data, _status_code, _headers = list_instance_templates_with_http_info(version, generation, opts)
      data
    end

    # Get instance templates.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param [Hash] opts the optional parameters
    # @return [Array<(InstanceTemplateCollection, Integer, Hash)>] InstanceTemplateCollection data, response status code and response headers
    def list_instance_templates_with_http_info(version, generation, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.list_instance_templates ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.list_instance_templates"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.list_instance_templates, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.list_instance_templates"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # resource path
      local_var_path = '/instance/templates'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'InstanceTemplateCollection' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#list_instance_templates\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List all volumes attached to an instance
    # This request lists all volume attachments for an instance. A volume attachment connects a volume to an instance. Each instance may have many volume attachments but each volume attachment connects exactly one instance to exactly one volume.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param [Hash] opts the optional parameters
    # @return [VolumeAttachmentCollection]
    def list_instance_volume_attachments(version, generation, instance_id, opts = {})
      data, _status_code, _headers = list_instance_volume_attachments_with_http_info(version, generation, instance_id, opts)
      data
    end

    # List all volumes attached to an instance
    # This request lists all volume attachments for an instance. A volume attachment connects a volume to an instance. Each instance may have many volume attachments but each volume attachment connects exactly one instance to exactly one volume.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(VolumeAttachmentCollection, Integer, Hash)>] VolumeAttachmentCollection data, response status code and response headers
    def list_instance_volume_attachments_with_http_info(version, generation, instance_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.list_instance_volume_attachments ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.list_instance_volume_attachments"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.list_instance_volume_attachments, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.list_instance_volume_attachments"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'instance_id' is set
      if @api_client.config.client_side_validation && instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'instance_id' when calling InstancesApi.list_instance_volume_attachments"
      end
      # resource path
      local_var_path = '/instances/{instance_id}/volume_attachments'.sub('{' + 'instance_id' + '}', CGI.escape(instance_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'VolumeAttachmentCollection' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#list_instance_volume_attachments\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List all instances
    # This request lists all instances in the region.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :start A server-supplied token determining what resource to start the page on
    # @option opts [Integer] :limit The number of resources to return on a page (default to 50)
    # @option opts [String] :resource_group_id Filters the collection to resources within one of the resource groups identified in a comma-separated list of resource group identifiers
    # @option opts [String] :name Filters the collection to resources with the exact specified name
    # @option opts [String] :vpc_id Filters the collection to resources in the VPC with the specified identifier
    # @option opts [String] :vpc_crn Filters the collection to resources in the VPC with the specified CRN
    # @option opts [String] :vpc_name Filters the collection to resources in the VPC with the exact specified name
    # @return [InstanceCollection]
    def list_instances(version, generation, opts = {})
      data, _status_code, _headers = list_instances_with_http_info(version, generation, opts)
      data
    end

    # List all instances
    # This request lists all instances in the region.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :start A server-supplied token determining what resource to start the page on
    # @option opts [Integer] :limit The number of resources to return on a page
    # @option opts [String] :resource_group_id Filters the collection to resources within one of the resource groups identified in a comma-separated list of resource group identifiers
    # @option opts [String] :name Filters the collection to resources with the exact specified name
    # @option opts [String] :vpc_id Filters the collection to resources in the VPC with the specified identifier
    # @option opts [String] :vpc_crn Filters the collection to resources in the VPC with the specified CRN
    # @option opts [String] :vpc_name Filters the collection to resources in the VPC with the exact specified name
    # @return [Array<(InstanceCollection, Integer, Hash)>] InstanceCollection data, response status code and response headers
    def list_instances_with_http_info(version, generation, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.list_instances ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.list_instances"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.list_instances, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.list_instances"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] > 100
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling InstancesApi.list_instances, must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] < 1
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling InstancesApi.list_instances, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/instances'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation
      query_params[:'start'] = opts[:'start'] if !opts[:'start'].nil?
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'resource_group.id'] = opts[:'resource_group_id'] if !opts[:'resource_group_id'].nil?
      query_params[:'name'] = opts[:'name'] if !opts[:'name'].nil?
      query_params[:'vpc.id'] = opts[:'vpc_id'] if !opts[:'vpc_id'].nil?
      query_params[:'vpc.crn'] = opts[:'vpc_crn'] if !opts[:'vpc_crn'].nil?
      query_params[:'vpc.name'] = opts[:'vpc_name'] if !opts[:'vpc_name'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'InstanceCollection' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#list_instances\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Disassociate specified floating IP
    # This request disassociates the specified floating IP from the specified network interface
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param network_interface_id [String] The network interface identifier
    # @param id [String] The floating IP identifier
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def remove_instance_network_interface_floating_ip(version, generation, instance_id, network_interface_id, id, opts = {})
      remove_instance_network_interface_floating_ip_with_http_info(version, generation, instance_id, network_interface_id, id, opts)
      nil
    end

    # Disassociate specified floating IP
    # This request disassociates the specified floating IP from the specified network interface
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param network_interface_id [String] The network interface identifier
    # @param id [String] The floating IP identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def remove_instance_network_interface_floating_ip_with_http_info(version, generation, instance_id, network_interface_id, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.remove_instance_network_interface_floating_ip ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.remove_instance_network_interface_floating_ip"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.remove_instance_network_interface_floating_ip, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.remove_instance_network_interface_floating_ip"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'instance_id' is set
      if @api_client.config.client_side_validation && instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'instance_id' when calling InstancesApi.remove_instance_network_interface_floating_ip"
      end
      # verify the required parameter 'network_interface_id' is set
      if @api_client.config.client_side_validation && network_interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'network_interface_id' when calling InstancesApi.remove_instance_network_interface_floating_ip"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling InstancesApi.remove_instance_network_interface_floating_ip"
      end
      # resource path
      local_var_path = '/instances/{instance_id}/network_interfaces/{network_interface_id}/floating_ips/{id}'.sub('{' + 'instance_id' + '}', CGI.escape(instance_id.to_s)).sub('{' + 'network_interface_id' + '}', CGI.escape(network_interface_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#remove_instance_network_interface_floating_ip\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update specified instance
    # This request updates an instance with the information in a provided instance patch. The instance patch object is structured in the same way as a retrieved instance and contains only the information to be updated.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The instance identifier
    # @param instance_patch [InstancePatch] The instance patch
    # @param [Hash] opts the optional parameters
    # @return [Instance]
    def update_instance(version, generation, id, instance_patch, opts = {})
      data, _status_code, _headers = update_instance_with_http_info(version, generation, id, instance_patch, opts)
      data
    end

    # Update specified instance
    # This request updates an instance with the information in a provided instance patch. The instance patch object is structured in the same way as a retrieved instance and contains only the information to be updated.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The instance identifier
    # @param instance_patch [InstancePatch] The instance patch
    # @param [Hash] opts the optional parameters
    # @return [Array<(Instance, Integer, Hash)>] Instance data, response status code and response headers
    def update_instance_with_http_info(version, generation, id, instance_patch, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.update_instance ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.update_instance"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.update_instance, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.update_instance"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling InstancesApi.update_instance"
      end
      # verify the required parameter 'instance_patch' is set
      if @api_client.config.client_side_validation && instance_patch.nil?
        fail ArgumentError, "Missing the required parameter 'instance_patch' when calling InstancesApi.update_instance"
      end
      # resource path
      local_var_path = '/instances/{id}'.sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(instance_patch) 

      # return_type
      return_type = opts[:return_type] || 'Instance' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#update_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update a network interface
    # This request updates a network interface with the information in a provided network interface patch. The network interface patch object is structured in the same way as a retrieved network interface and can contain an updated name and/or port speed.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param id [String] The network interface identifier
    # @param network_interface_patch [NetworkInterfacePatch] The network interface patch
    # @param [Hash] opts the optional parameters
    # @return [NetworkInterface]
    def update_instance_network_interface(version, generation, instance_id, id, network_interface_patch, opts = {})
      data, _status_code, _headers = update_instance_network_interface_with_http_info(version, generation, instance_id, id, network_interface_patch, opts)
      data
    end

    # Update a network interface
    # This request updates a network interface with the information in a provided network interface patch. The network interface patch object is structured in the same way as a retrieved network interface and can contain an updated name and/or port speed.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param id [String] The network interface identifier
    # @param network_interface_patch [NetworkInterfacePatch] The network interface patch
    # @param [Hash] opts the optional parameters
    # @return [Array<(NetworkInterface, Integer, Hash)>] NetworkInterface data, response status code and response headers
    def update_instance_network_interface_with_http_info(version, generation, instance_id, id, network_interface_patch, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.update_instance_network_interface ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.update_instance_network_interface"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.update_instance_network_interface, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.update_instance_network_interface"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'instance_id' is set
      if @api_client.config.client_side_validation && instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'instance_id' when calling InstancesApi.update_instance_network_interface"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling InstancesApi.update_instance_network_interface"
      end
      # verify the required parameter 'network_interface_patch' is set
      if @api_client.config.client_side_validation && network_interface_patch.nil?
        fail ArgumentError, "Missing the required parameter 'network_interface_patch' when calling InstancesApi.update_instance_network_interface"
      end
      # resource path
      local_var_path = '/instances/{instance_id}/network_interfaces/{id}'.sub('{' + 'instance_id' + '}', CGI.escape(instance_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(network_interface_patch) 

      # return_type
      return_type = opts[:return_type] || 'NetworkInterface' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#update_instance_network_interface\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update specified instance template
    # This request updates an instance template with the information provided in the instance template patch. The instance template patch object is structured in the same way as a retrieved instance template and contains only the information to be updated.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The instance template identifier
    # @param instance_template_patch [InstanceTemplatePatch] The instance template patch
    # @param [Hash] opts the optional parameters
    # @return [InstanceTemplate]
    def update_instance_template(version, generation, id, instance_template_patch, opts = {})
      data, _status_code, _headers = update_instance_template_with_http_info(version, generation, id, instance_template_patch, opts)
      data
    end

    # Update specified instance template
    # This request updates an instance template with the information provided in the instance template patch. The instance template patch object is structured in the same way as a retrieved instance template and contains only the information to be updated.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The instance template identifier
    # @param instance_template_patch [InstanceTemplatePatch] The instance template patch
    # @param [Hash] opts the optional parameters
    # @return [Array<(InstanceTemplate, Integer, Hash)>] InstanceTemplate data, response status code and response headers
    def update_instance_template_with_http_info(version, generation, id, instance_template_patch, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.update_instance_template ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.update_instance_template"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.update_instance_template, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.update_instance_template"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling InstancesApi.update_instance_template"
      end
      # verify the required parameter 'instance_template_patch' is set
      if @api_client.config.client_side_validation && instance_template_patch.nil?
        fail ArgumentError, "Missing the required parameter 'instance_template_patch' when calling InstancesApi.update_instance_template"
      end
      # resource path
      local_var_path = '/instance/templates/{id}'.sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(instance_template_patch) 

      # return_type
      return_type = opts[:return_type] || 'InstanceTemplate' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#update_instance_template\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update a volume attachment
    # This request updates a volume attachment with the information in a provided volume attachment patch. The volume attachment patch object is structured in the same way as a retrieved volume attachment and can contain an updated name.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param id [String] The volume attachment identifier
    # @param volume_attachment_patch [VolumeAttachmentPatch] The volume attachment patch
    # @param [Hash] opts the optional parameters
    # @return [VolumeAttachment]
    def update_instance_volume_attachment(version, generation, instance_id, id, volume_attachment_patch, opts = {})
      data, _status_code, _headers = update_instance_volume_attachment_with_http_info(version, generation, instance_id, id, volume_attachment_patch, opts)
      data
    end

    # Update a volume attachment
    # This request updates a volume attachment with the information in a provided volume attachment patch. The volume attachment patch object is structured in the same way as a retrieved volume attachment and can contain an updated name.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param instance_id [String] The instance identifier
    # @param id [String] The volume attachment identifier
    # @param volume_attachment_patch [VolumeAttachmentPatch] The volume attachment patch
    # @param [Hash] opts the optional parameters
    # @return [Array<(VolumeAttachment, Integer, Hash)>] VolumeAttachment data, response status code and response headers
    def update_instance_volume_attachment_with_http_info(version, generation, instance_id, id, volume_attachment_patch, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstancesApi.update_instance_volume_attachment ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling InstancesApi.update_instance_volume_attachment"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling InstancesApi.update_instance_volume_attachment, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling InstancesApi.update_instance_volume_attachment"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'instance_id' is set
      if @api_client.config.client_side_validation && instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'instance_id' when calling InstancesApi.update_instance_volume_attachment"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling InstancesApi.update_instance_volume_attachment"
      end
      # verify the required parameter 'volume_attachment_patch' is set
      if @api_client.config.client_side_validation && volume_attachment_patch.nil?
        fail ArgumentError, "Missing the required parameter 'volume_attachment_patch' when calling InstancesApi.update_instance_volume_attachment"
      end
      # resource path
      local_var_path = '/instances/{instance_id}/volume_attachments/{id}'.sub('{' + 'instance_id' + '}', CGI.escape(instance_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(volume_attachment_patch) 

      # return_type
      return_type = opts[:return_type] || 'VolumeAttachment' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstancesApi#update_instance_volume_attachment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end

=begin
#Virtual Private Cloud API

#The IBM Cloud Virtual Private Cloud (VPC) API can be used to programmatically provision and manage infrastructure resources, including virtual server instances, subnets, volumes, and load balancers.

The version of the OpenAPI document: 2020-09-08

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0-beta2

=end

require 'cgi'

module IbmCloudVpc
  class LoadBalancersApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create and provision a load balancer
    # This request creates and provisions a new load balancer.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_prototype [LoadBalancerPrototype] The load balancer prototype object
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancer]
    def create_load_balancer(version, generation, load_balancer_prototype, opts = {})
      data, _status_code, _headers = create_load_balancer_with_http_info(version, generation, load_balancer_prototype, opts)
      data
    end

    # Create and provision a load balancer
    # This request creates and provisions a new load balancer.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_prototype [LoadBalancerPrototype] The load balancer prototype object
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancer, Integer, Hash)>] LoadBalancer data, response status code and response headers
    def create_load_balancer_with_http_info(version, generation, load_balancer_prototype, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.create_load_balancer ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.create_load_balancer"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.create_load_balancer, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.create_load_balancer"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_prototype' is set
      if @api_client.config.client_side_validation && load_balancer_prototype.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_prototype' when calling LoadBalancersApi.create_load_balancer"
      end
      # resource path
      local_var_path = '/load_balancers'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(load_balancer_prototype) 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancer' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#create_load_balancer\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create a listener
    # This request creates a new listener to the load balancer.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param load_balancer_listener_prototype [LoadBalancerListenerPrototype] The load balancer listener prototype object
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerListener]
    def create_load_balancer_listener(version, generation, load_balancer_id, load_balancer_listener_prototype, opts = {})
      data, _status_code, _headers = create_load_balancer_listener_with_http_info(version, generation, load_balancer_id, load_balancer_listener_prototype, opts)
      data
    end

    # Create a listener
    # This request creates a new listener to the load balancer.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param load_balancer_listener_prototype [LoadBalancerListenerPrototype] The load balancer listener prototype object
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerListener, Integer, Hash)>] LoadBalancerListener data, response status code and response headers
    def create_load_balancer_listener_with_http_info(version, generation, load_balancer_id, load_balancer_listener_prototype, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.create_load_balancer_listener ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.create_load_balancer_listener"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.create_load_balancer_listener, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.create_load_balancer_listener"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.create_load_balancer_listener"
      end
      # verify the required parameter 'load_balancer_listener_prototype' is set
      if @api_client.config.client_side_validation && load_balancer_listener_prototype.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_listener_prototype' when calling LoadBalancersApi.create_load_balancer_listener"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/listeners'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(load_balancer_listener_prototype) 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerListener' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#create_load_balancer_listener\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create a policy for the load balancer listener
    # Creates a new policy to the load balancer listener.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param listener_id [String] The listener identifier
    # @param load_balancer_listener_policy_prototype [LoadBalancerListenerPolicyPrototype] The listener policy prototype object
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerListenerPolicy]
    def create_load_balancer_listener_policy(version, generation, load_balancer_id, listener_id, load_balancer_listener_policy_prototype, opts = {})
      data, _status_code, _headers = create_load_balancer_listener_policy_with_http_info(version, generation, load_balancer_id, listener_id, load_balancer_listener_policy_prototype, opts)
      data
    end

    # Create a policy for the load balancer listener
    # Creates a new policy to the load balancer listener.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param listener_id [String] The listener identifier
    # @param load_balancer_listener_policy_prototype [LoadBalancerListenerPolicyPrototype] The listener policy prototype object
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerListenerPolicy, Integer, Hash)>] LoadBalancerListenerPolicy data, response status code and response headers
    def create_load_balancer_listener_policy_with_http_info(version, generation, load_balancer_id, listener_id, load_balancer_listener_policy_prototype, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.create_load_balancer_listener_policy ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.create_load_balancer_listener_policy"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.create_load_balancer_listener_policy, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.create_load_balancer_listener_policy"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.create_load_balancer_listener_policy"
      end
      # verify the required parameter 'listener_id' is set
      if @api_client.config.client_side_validation && listener_id.nil?
        fail ArgumentError, "Missing the required parameter 'listener_id' when calling LoadBalancersApi.create_load_balancer_listener_policy"
      end
      # verify the required parameter 'load_balancer_listener_policy_prototype' is set
      if @api_client.config.client_side_validation && load_balancer_listener_policy_prototype.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_listener_policy_prototype' when calling LoadBalancersApi.create_load_balancer_listener_policy"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/listeners/{listener_id}/policies'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s)).sub('{' + 'listener_id' + '}', CGI.escape(listener_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(load_balancer_listener_policy_prototype) 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerListenerPolicy' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#create_load_balancer_listener_policy\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create a rule for the load balancer listener policy
    # Creates a new rule for the load balancer listener policy.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param listener_id [String] The listener identifier
    # @param policy_id [String] The policy identifier
    # @param load_balancer_listener_policy_rule_prototype [LoadBalancerListenerPolicyRulePrototype] The listener policy rule prototype object
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerListenerPolicyRule]
    def create_load_balancer_listener_policy_rule(version, generation, load_balancer_id, listener_id, policy_id, load_balancer_listener_policy_rule_prototype, opts = {})
      data, _status_code, _headers = create_load_balancer_listener_policy_rule_with_http_info(version, generation, load_balancer_id, listener_id, policy_id, load_balancer_listener_policy_rule_prototype, opts)
      data
    end

    # Create a rule for the load balancer listener policy
    # Creates a new rule for the load balancer listener policy.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param listener_id [String] The listener identifier
    # @param policy_id [String] The policy identifier
    # @param load_balancer_listener_policy_rule_prototype [LoadBalancerListenerPolicyRulePrototype] The listener policy rule prototype object
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerListenerPolicyRule, Integer, Hash)>] LoadBalancerListenerPolicyRule data, response status code and response headers
    def create_load_balancer_listener_policy_rule_with_http_info(version, generation, load_balancer_id, listener_id, policy_id, load_balancer_listener_policy_rule_prototype, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.create_load_balancer_listener_policy_rule ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.create_load_balancer_listener_policy_rule"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.create_load_balancer_listener_policy_rule, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.create_load_balancer_listener_policy_rule"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.create_load_balancer_listener_policy_rule"
      end
      # verify the required parameter 'listener_id' is set
      if @api_client.config.client_side_validation && listener_id.nil?
        fail ArgumentError, "Missing the required parameter 'listener_id' when calling LoadBalancersApi.create_load_balancer_listener_policy_rule"
      end
      # verify the required parameter 'policy_id' is set
      if @api_client.config.client_side_validation && policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'policy_id' when calling LoadBalancersApi.create_load_balancer_listener_policy_rule"
      end
      # verify the required parameter 'load_balancer_listener_policy_rule_prototype' is set
      if @api_client.config.client_side_validation && load_balancer_listener_policy_rule_prototype.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_listener_policy_rule_prototype' when calling LoadBalancersApi.create_load_balancer_listener_policy_rule"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/listeners/{listener_id}/policies/{policy_id}/rules'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s)).sub('{' + 'listener_id' + '}', CGI.escape(listener_id.to_s)).sub('{' + 'policy_id' + '}', CGI.escape(policy_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(load_balancer_listener_policy_rule_prototype) 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerListenerPolicyRule' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#create_load_balancer_listener_policy_rule\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create a load balancer pool
    # This request creates a new pool from a pool prototype object.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param load_balancer_pool_prototype [LoadBalancerPoolPrototype] The load balancer pool prototype object.
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerPool]
    def create_load_balancer_pool(version, generation, load_balancer_id, load_balancer_pool_prototype, opts = {})
      data, _status_code, _headers = create_load_balancer_pool_with_http_info(version, generation, load_balancer_id, load_balancer_pool_prototype, opts)
      data
    end

    # Create a load balancer pool
    # This request creates a new pool from a pool prototype object.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param load_balancer_pool_prototype [LoadBalancerPoolPrototype] The load balancer pool prototype object.
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerPool, Integer, Hash)>] LoadBalancerPool data, response status code and response headers
    def create_load_balancer_pool_with_http_info(version, generation, load_balancer_id, load_balancer_pool_prototype, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.create_load_balancer_pool ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.create_load_balancer_pool"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.create_load_balancer_pool, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.create_load_balancer_pool"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.create_load_balancer_pool"
      end
      # verify the required parameter 'load_balancer_pool_prototype' is set
      if @api_client.config.client_side_validation && load_balancer_pool_prototype.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_pool_prototype' when calling LoadBalancersApi.create_load_balancer_pool"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/pools'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(load_balancer_pool_prototype) 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerPool' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#create_load_balancer_pool\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create a member in the load balancer pool
    # This request creates a new member and adds the member to the pool.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param pool_id [String] The pool identifier
    # @param load_balancer_pool_member_prototype [LoadBalancerPoolMemberPrototype] The prototype object for a new load balancer pool member. For load balancers in the &#x60;network&#x60; family, the same &#x60;port&#x60; and &#x60;target&#x60; tuple cannot be shared by a member of Any other load balancer.
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerPoolMember]
    def create_load_balancer_pool_member(version, generation, load_balancer_id, pool_id, load_balancer_pool_member_prototype, opts = {})
      data, _status_code, _headers = create_load_balancer_pool_member_with_http_info(version, generation, load_balancer_id, pool_id, load_balancer_pool_member_prototype, opts)
      data
    end

    # Create a member in the load balancer pool
    # This request creates a new member and adds the member to the pool.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param pool_id [String] The pool identifier
    # @param load_balancer_pool_member_prototype [LoadBalancerPoolMemberPrototype] The prototype object for a new load balancer pool member. For load balancers in the &#x60;network&#x60; family, the same &#x60;port&#x60; and &#x60;target&#x60; tuple cannot be shared by a member of Any other load balancer.
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerPoolMember, Integer, Hash)>] LoadBalancerPoolMember data, response status code and response headers
    def create_load_balancer_pool_member_with_http_info(version, generation, load_balancer_id, pool_id, load_balancer_pool_member_prototype, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.create_load_balancer_pool_member ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.create_load_balancer_pool_member"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.create_load_balancer_pool_member, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.create_load_balancer_pool_member"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.create_load_balancer_pool_member"
      end
      # verify the required parameter 'pool_id' is set
      if @api_client.config.client_side_validation && pool_id.nil?
        fail ArgumentError, "Missing the required parameter 'pool_id' when calling LoadBalancersApi.create_load_balancer_pool_member"
      end
      # verify the required parameter 'load_balancer_pool_member_prototype' is set
      if @api_client.config.client_side_validation && load_balancer_pool_member_prototype.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_pool_member_prototype' when calling LoadBalancersApi.create_load_balancer_pool_member"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/pools/{pool_id}/members'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s)).sub('{' + 'pool_id' + '}', CGI.escape(pool_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(load_balancer_pool_member_prototype) 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerPoolMember' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#create_load_balancer_pool_member\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete a load balancer
    # This request deletes a load balancer. This operation cannot be reversed.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The load balancer identifier
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_load_balancer(version, generation, id, opts = {})
      delete_load_balancer_with_http_info(version, generation, id, opts)
      nil
    end

    # Delete a load balancer
    # This request deletes a load balancer. This operation cannot be reversed.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The load balancer identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_load_balancer_with_http_info(version, generation, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.delete_load_balancer ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.delete_load_balancer"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.delete_load_balancer, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.delete_load_balancer"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling LoadBalancersApi.delete_load_balancer"
      end
      # resource path
      local_var_path = '/load_balancers/{id}'.sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#delete_load_balancer\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete a listener
    # This request deletes a load balancer listener. This operation cannot be reversed.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param id [String] The listener identifier
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_load_balancer_listener(version, generation, load_balancer_id, id, opts = {})
      delete_load_balancer_listener_with_http_info(version, generation, load_balancer_id, id, opts)
      nil
    end

    # Delete a listener
    # This request deletes a load balancer listener. This operation cannot be reversed.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param id [String] The listener identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_load_balancer_listener_with_http_info(version, generation, load_balancer_id, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.delete_load_balancer_listener ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.delete_load_balancer_listener"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.delete_load_balancer_listener, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.delete_load_balancer_listener"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.delete_load_balancer_listener"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling LoadBalancersApi.delete_load_balancer_listener"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/listeners/{id}'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#delete_load_balancer_listener\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete a policy of the load balancer listener
    # Deletes a policy of the load balancer listener. This operation cannot be reversed.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param listener_id [String] The listener identifier
    # @param id [String] The policy identifier
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_load_balancer_listener_policy(version, generation, load_balancer_id, listener_id, id, opts = {})
      delete_load_balancer_listener_policy_with_http_info(version, generation, load_balancer_id, listener_id, id, opts)
      nil
    end

    # Delete a policy of the load balancer listener
    # Deletes a policy of the load balancer listener. This operation cannot be reversed.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param listener_id [String] The listener identifier
    # @param id [String] The policy identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_load_balancer_listener_policy_with_http_info(version, generation, load_balancer_id, listener_id, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.delete_load_balancer_listener_policy ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.delete_load_balancer_listener_policy"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.delete_load_balancer_listener_policy, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.delete_load_balancer_listener_policy"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.delete_load_balancer_listener_policy"
      end
      # verify the required parameter 'listener_id' is set
      if @api_client.config.client_side_validation && listener_id.nil?
        fail ArgumentError, "Missing the required parameter 'listener_id' when calling LoadBalancersApi.delete_load_balancer_listener_policy"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling LoadBalancersApi.delete_load_balancer_listener_policy"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/listeners/{listener_id}/policies/{id}'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s)).sub('{' + 'listener_id' + '}', CGI.escape(listener_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#delete_load_balancer_listener_policy\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete a rule from the load balancer listener policy
    # Deletes a rule from the load balancer listener policy. This operation cannot be reversed.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param listener_id [String] The listener identifier
    # @param policy_id [String] The policy identifier
    # @param id [String] The rule identifier
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_load_balancer_listener_policy_rule(version, generation, load_balancer_id, listener_id, policy_id, id, opts = {})
      delete_load_balancer_listener_policy_rule_with_http_info(version, generation, load_balancer_id, listener_id, policy_id, id, opts)
      nil
    end

    # Delete a rule from the load balancer listener policy
    # Deletes a rule from the load balancer listener policy. This operation cannot be reversed.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param listener_id [String] The listener identifier
    # @param policy_id [String] The policy identifier
    # @param id [String] The rule identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_load_balancer_listener_policy_rule_with_http_info(version, generation, load_balancer_id, listener_id, policy_id, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.delete_load_balancer_listener_policy_rule ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.delete_load_balancer_listener_policy_rule"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.delete_load_balancer_listener_policy_rule, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.delete_load_balancer_listener_policy_rule"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.delete_load_balancer_listener_policy_rule"
      end
      # verify the required parameter 'listener_id' is set
      if @api_client.config.client_side_validation && listener_id.nil?
        fail ArgumentError, "Missing the required parameter 'listener_id' when calling LoadBalancersApi.delete_load_balancer_listener_policy_rule"
      end
      # verify the required parameter 'policy_id' is set
      if @api_client.config.client_side_validation && policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'policy_id' when calling LoadBalancersApi.delete_load_balancer_listener_policy_rule"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling LoadBalancersApi.delete_load_balancer_listener_policy_rule"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/listeners/{listener_id}/policies/{policy_id}/rules/{id}'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s)).sub('{' + 'listener_id' + '}', CGI.escape(listener_id.to_s)).sub('{' + 'policy_id' + '}', CGI.escape(policy_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#delete_load_balancer_listener_policy_rule\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete a pool
    # This request deletes a load balancer pool. This operation cannot be reversed.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param id [String] The pool identifier
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_load_balancer_pool(version, generation, load_balancer_id, id, opts = {})
      delete_load_balancer_pool_with_http_info(version, generation, load_balancer_id, id, opts)
      nil
    end

    # Delete a pool
    # This request deletes a load balancer pool. This operation cannot be reversed.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param id [String] The pool identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_load_balancer_pool_with_http_info(version, generation, load_balancer_id, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.delete_load_balancer_pool ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.delete_load_balancer_pool"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.delete_load_balancer_pool, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.delete_load_balancer_pool"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.delete_load_balancer_pool"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling LoadBalancersApi.delete_load_balancer_pool"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/pools/{id}'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#delete_load_balancer_pool\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete a member from the load balancer pool
    # This request deletes a member from the pool. This operation cannot be reversed.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param pool_id [String] The pool identifier
    # @param id [String] The member identifier
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_load_balancer_pool_member(version, generation, load_balancer_id, pool_id, id, opts = {})
      delete_load_balancer_pool_member_with_http_info(version, generation, load_balancer_id, pool_id, id, opts)
      nil
    end

    # Delete a member from the load balancer pool
    # This request deletes a member from the pool. This operation cannot be reversed.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param pool_id [String] The pool identifier
    # @param id [String] The member identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_load_balancer_pool_member_with_http_info(version, generation, load_balancer_id, pool_id, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.delete_load_balancer_pool_member ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.delete_load_balancer_pool_member"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.delete_load_balancer_pool_member, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.delete_load_balancer_pool_member"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.delete_load_balancer_pool_member"
      end
      # verify the required parameter 'pool_id' is set
      if @api_client.config.client_side_validation && pool_id.nil?
        fail ArgumentError, "Missing the required parameter 'pool_id' when calling LoadBalancersApi.delete_load_balancer_pool_member"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling LoadBalancersApi.delete_load_balancer_pool_member"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/pools/{pool_id}/members/{id}'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s)).sub('{' + 'pool_id' + '}', CGI.escape(pool_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#delete_load_balancer_pool_member\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve a load balancer
    # This request retrieves a single load balancer specified by the identifier in the URL path.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The load balancer identifier
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancer]
    def get_load_balancer(version, generation, id, opts = {})
      data, _status_code, _headers = get_load_balancer_with_http_info(version, generation, id, opts)
      data
    end

    # Retrieve a load balancer
    # This request retrieves a single load balancer specified by the identifier in the URL path.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The load balancer identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancer, Integer, Hash)>] LoadBalancer data, response status code and response headers
    def get_load_balancer_with_http_info(version, generation, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.get_load_balancer ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.get_load_balancer"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.get_load_balancer, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.get_load_balancer"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling LoadBalancersApi.get_load_balancer"
      end
      # resource path
      local_var_path = '/load_balancers/{id}'.sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancer' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#get_load_balancer\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve a listener
    # This request retrieves a single listener specified by the identifier in the URL path.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param id [String] The listener identifier
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerListener]
    def get_load_balancer_listener(version, generation, load_balancer_id, id, opts = {})
      data, _status_code, _headers = get_load_balancer_listener_with_http_info(version, generation, load_balancer_id, id, opts)
      data
    end

    # Retrieve a listener
    # This request retrieves a single listener specified by the identifier in the URL path.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param id [String] The listener identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerListener, Integer, Hash)>] LoadBalancerListener data, response status code and response headers
    def get_load_balancer_listener_with_http_info(version, generation, load_balancer_id, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.get_load_balancer_listener ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.get_load_balancer_listener"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.get_load_balancer_listener, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.get_load_balancer_listener"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.get_load_balancer_listener"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling LoadBalancersApi.get_load_balancer_listener"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/listeners/{id}'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerListener' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#get_load_balancer_listener\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve a policy of the load balancer listener
    # Retrieve a single policy specified by the identifier in the URL path.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param listener_id [String] The listener identifier
    # @param id [String] The policy identifier
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerListenerPolicy]
    def get_load_balancer_listener_policy(version, generation, load_balancer_id, listener_id, id, opts = {})
      data, _status_code, _headers = get_load_balancer_listener_policy_with_http_info(version, generation, load_balancer_id, listener_id, id, opts)
      data
    end

    # Retrieve a policy of the load balancer listener
    # Retrieve a single policy specified by the identifier in the URL path.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param listener_id [String] The listener identifier
    # @param id [String] The policy identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerListenerPolicy, Integer, Hash)>] LoadBalancerListenerPolicy data, response status code and response headers
    def get_load_balancer_listener_policy_with_http_info(version, generation, load_balancer_id, listener_id, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.get_load_balancer_listener_policy ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.get_load_balancer_listener_policy"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.get_load_balancer_listener_policy, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.get_load_balancer_listener_policy"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.get_load_balancer_listener_policy"
      end
      # verify the required parameter 'listener_id' is set
      if @api_client.config.client_side_validation && listener_id.nil?
        fail ArgumentError, "Missing the required parameter 'listener_id' when calling LoadBalancersApi.get_load_balancer_listener_policy"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling LoadBalancersApi.get_load_balancer_listener_policy"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/listeners/{listener_id}/policies/{id}'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s)).sub('{' + 'listener_id' + '}', CGI.escape(listener_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerListenerPolicy' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#get_load_balancer_listener_policy\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve a rule of the load balancer listener policy
    # Retrieves a single rule specified by the identifier in the URL path.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param listener_id [String] The listener identifier
    # @param policy_id [String] The policy identifier
    # @param id [String] The rule identifier
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerListenerPolicyRule]
    def get_load_balancer_listener_policy_rule(version, generation, load_balancer_id, listener_id, policy_id, id, opts = {})
      data, _status_code, _headers = get_load_balancer_listener_policy_rule_with_http_info(version, generation, load_balancer_id, listener_id, policy_id, id, opts)
      data
    end

    # Retrieve a rule of the load balancer listener policy
    # Retrieves a single rule specified by the identifier in the URL path.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param listener_id [String] The listener identifier
    # @param policy_id [String] The policy identifier
    # @param id [String] The rule identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerListenerPolicyRule, Integer, Hash)>] LoadBalancerListenerPolicyRule data, response status code and response headers
    def get_load_balancer_listener_policy_rule_with_http_info(version, generation, load_balancer_id, listener_id, policy_id, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.get_load_balancer_listener_policy_rule ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.get_load_balancer_listener_policy_rule"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.get_load_balancer_listener_policy_rule, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.get_load_balancer_listener_policy_rule"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.get_load_balancer_listener_policy_rule"
      end
      # verify the required parameter 'listener_id' is set
      if @api_client.config.client_side_validation && listener_id.nil?
        fail ArgumentError, "Missing the required parameter 'listener_id' when calling LoadBalancersApi.get_load_balancer_listener_policy_rule"
      end
      # verify the required parameter 'policy_id' is set
      if @api_client.config.client_side_validation && policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'policy_id' when calling LoadBalancersApi.get_load_balancer_listener_policy_rule"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling LoadBalancersApi.get_load_balancer_listener_policy_rule"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/listeners/{listener_id}/policies/{policy_id}/rules/{id}'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s)).sub('{' + 'listener_id' + '}', CGI.escape(listener_id.to_s)).sub('{' + 'policy_id' + '}', CGI.escape(policy_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerListenerPolicyRule' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#get_load_balancer_listener_policy_rule\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve a load balancer pool
    # This request retrieves a single pool specified by the identifier in the URL path.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param id [String] The pool identifier
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerPool]
    def get_load_balancer_pool(version, generation, load_balancer_id, id, opts = {})
      data, _status_code, _headers = get_load_balancer_pool_with_http_info(version, generation, load_balancer_id, id, opts)
      data
    end

    # Retrieve a load balancer pool
    # This request retrieves a single pool specified by the identifier in the URL path.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param id [String] The pool identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerPool, Integer, Hash)>] LoadBalancerPool data, response status code and response headers
    def get_load_balancer_pool_with_http_info(version, generation, load_balancer_id, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.get_load_balancer_pool ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.get_load_balancer_pool"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.get_load_balancer_pool, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.get_load_balancer_pool"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.get_load_balancer_pool"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling LoadBalancersApi.get_load_balancer_pool"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/pools/{id}'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerPool' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#get_load_balancer_pool\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve a member in the load balancer pool
    # This request retrieves a single member specified by the identifier in the URL path.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param pool_id [String] The pool identifier
    # @param id [String] The member identifier
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerPoolMember]
    def get_load_balancer_pool_member(version, generation, load_balancer_id, pool_id, id, opts = {})
      data, _status_code, _headers = get_load_balancer_pool_member_with_http_info(version, generation, load_balancer_id, pool_id, id, opts)
      data
    end

    # Retrieve a member in the load balancer pool
    # This request retrieves a single member specified by the identifier in the URL path.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param pool_id [String] The pool identifier
    # @param id [String] The member identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerPoolMember, Integer, Hash)>] LoadBalancerPoolMember data, response status code and response headers
    def get_load_balancer_pool_member_with_http_info(version, generation, load_balancer_id, pool_id, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.get_load_balancer_pool_member ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.get_load_balancer_pool_member"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.get_load_balancer_pool_member, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.get_load_balancer_pool_member"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.get_load_balancer_pool_member"
      end
      # verify the required parameter 'pool_id' is set
      if @api_client.config.client_side_validation && pool_id.nil?
        fail ArgumentError, "Missing the required parameter 'pool_id' when calling LoadBalancersApi.get_load_balancer_pool_member"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling LoadBalancersApi.get_load_balancer_pool_member"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/pools/{pool_id}/members/{id}'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s)).sub('{' + 'pool_id' + '}', CGI.escape(pool_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerPoolMember' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#get_load_balancer_pool_member\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve specified load balancer profile
    # This request retrieves a load balancer profile specified by the name in the URL.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param name [String] The load balancer profile name
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerProfile]
    def get_load_balancer_profile(version, generation, name, opts = {})
      data, _status_code, _headers = get_load_balancer_profile_with_http_info(version, generation, name, opts)
      data
    end

    # Retrieve specified load balancer profile
    # This request retrieves a load balancer profile specified by the name in the URL.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param name [String] The load balancer profile name
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerProfile, Integer, Hash)>] LoadBalancerProfile data, response status code and response headers
    def get_load_balancer_profile_with_http_info(version, generation, name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.get_load_balancer_profile ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.get_load_balancer_profile"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.get_load_balancer_profile, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.get_load_balancer_profile"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling LoadBalancersApi.get_load_balancer_profile"
      end
      # resource path
      local_var_path = '/load_balancer/profiles/{name}'.sub('{' + 'name' + '}', CGI.escape(name.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerProfile' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#get_load_balancer_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List statistics of a load balancer
    # This request lists statistics of a load balancer specified by the identifier in the URL path.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The load balancer identifier
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerStatistics]
    def get_load_balancer_statistics(version, generation, id, opts = {})
      data, _status_code, _headers = get_load_balancer_statistics_with_http_info(version, generation, id, opts)
      data
    end

    # List statistics of a load balancer
    # This request lists statistics of a load balancer specified by the identifier in the URL path.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The load balancer identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerStatistics, Integer, Hash)>] LoadBalancerStatistics data, response status code and response headers
    def get_load_balancer_statistics_with_http_info(version, generation, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.get_load_balancer_statistics ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.get_load_balancer_statistics"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.get_load_balancer_statistics, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.get_load_balancer_statistics"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling LoadBalancersApi.get_load_balancer_statistics"
      end
      # resource path
      local_var_path = '/load_balancers/{id}/statistics'.sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerStatistics' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#get_load_balancer_statistics\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List all policies of the load balancer listener
    # Retrieves a list of all policies belonging to the load balancer listener.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param listener_id [String] The listener identifier
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerListenerPolicyCollection]
    def list_load_balancer_listener_policies(version, generation, load_balancer_id, listener_id, opts = {})
      data, _status_code, _headers = list_load_balancer_listener_policies_with_http_info(version, generation, load_balancer_id, listener_id, opts)
      data
    end

    # List all policies of the load balancer listener
    # Retrieves a list of all policies belonging to the load balancer listener.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param listener_id [String] The listener identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerListenerPolicyCollection, Integer, Hash)>] LoadBalancerListenerPolicyCollection data, response status code and response headers
    def list_load_balancer_listener_policies_with_http_info(version, generation, load_balancer_id, listener_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.list_load_balancer_listener_policies ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.list_load_balancer_listener_policies"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.list_load_balancer_listener_policies, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.list_load_balancer_listener_policies"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.list_load_balancer_listener_policies"
      end
      # verify the required parameter 'listener_id' is set
      if @api_client.config.client_side_validation && listener_id.nil?
        fail ArgumentError, "Missing the required parameter 'listener_id' when calling LoadBalancersApi.list_load_balancer_listener_policies"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/listeners/{listener_id}/policies'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s)).sub('{' + 'listener_id' + '}', CGI.escape(listener_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerListenerPolicyCollection' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#list_load_balancer_listener_policies\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List all rules of the load balancer listener policy
    # Retrieves a list of all rules belonging to the load balancer listener policy.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param listener_id [String] The listener identifier
    # @param policy_id [String] The policy identifier
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerListenerPolicyRuleCollection]
    def list_load_balancer_listener_policy_rules(version, generation, load_balancer_id, listener_id, policy_id, opts = {})
      data, _status_code, _headers = list_load_balancer_listener_policy_rules_with_http_info(version, generation, load_balancer_id, listener_id, policy_id, opts)
      data
    end

    # List all rules of the load balancer listener policy
    # Retrieves a list of all rules belonging to the load balancer listener policy.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param listener_id [String] The listener identifier
    # @param policy_id [String] The policy identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerListenerPolicyRuleCollection, Integer, Hash)>] LoadBalancerListenerPolicyRuleCollection data, response status code and response headers
    def list_load_balancer_listener_policy_rules_with_http_info(version, generation, load_balancer_id, listener_id, policy_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.list_load_balancer_listener_policy_rules ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.list_load_balancer_listener_policy_rules"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.list_load_balancer_listener_policy_rules, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.list_load_balancer_listener_policy_rules"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.list_load_balancer_listener_policy_rules"
      end
      # verify the required parameter 'listener_id' is set
      if @api_client.config.client_side_validation && listener_id.nil?
        fail ArgumentError, "Missing the required parameter 'listener_id' when calling LoadBalancersApi.list_load_balancer_listener_policy_rules"
      end
      # verify the required parameter 'policy_id' is set
      if @api_client.config.client_side_validation && policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'policy_id' when calling LoadBalancersApi.list_load_balancer_listener_policy_rules"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/listeners/{listener_id}/policies/{policy_id}/rules'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s)).sub('{' + 'listener_id' + '}', CGI.escape(listener_id.to_s)).sub('{' + 'policy_id' + '}', CGI.escape(policy_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerListenerPolicyRuleCollection' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#list_load_balancer_listener_policy_rules\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List all listeners of the load balancer
    # This request retrieves a list of all listeners that belong to the load balancer.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerListenerCollection]
    def list_load_balancer_listeners(version, generation, load_balancer_id, opts = {})
      data, _status_code, _headers = list_load_balancer_listeners_with_http_info(version, generation, load_balancer_id, opts)
      data
    end

    # List all listeners of the load balancer
    # This request retrieves a list of all listeners that belong to the load balancer.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerListenerCollection, Integer, Hash)>] LoadBalancerListenerCollection data, response status code and response headers
    def list_load_balancer_listeners_with_http_info(version, generation, load_balancer_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.list_load_balancer_listeners ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.list_load_balancer_listeners"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.list_load_balancer_listeners, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.list_load_balancer_listeners"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.list_load_balancer_listeners"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/listeners'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerListenerCollection' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#list_load_balancer_listeners\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List all members of the load balancer pool
    # This request retrieves a paginated list of all members that belong to the pool.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param pool_id [String] The pool identifier
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerPoolMemberCollection]
    def list_load_balancer_pool_members(version, generation, load_balancer_id, pool_id, opts = {})
      data, _status_code, _headers = list_load_balancer_pool_members_with_http_info(version, generation, load_balancer_id, pool_id, opts)
      data
    end

    # List all members of the load balancer pool
    # This request retrieves a paginated list of all members that belong to the pool.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param pool_id [String] The pool identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerPoolMemberCollection, Integer, Hash)>] LoadBalancerPoolMemberCollection data, response status code and response headers
    def list_load_balancer_pool_members_with_http_info(version, generation, load_balancer_id, pool_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.list_load_balancer_pool_members ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.list_load_balancer_pool_members"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.list_load_balancer_pool_members, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.list_load_balancer_pool_members"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.list_load_balancer_pool_members"
      end
      # verify the required parameter 'pool_id' is set
      if @api_client.config.client_side_validation && pool_id.nil?
        fail ArgumentError, "Missing the required parameter 'pool_id' when calling LoadBalancersApi.list_load_balancer_pool_members"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/pools/{pool_id}/members'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s)).sub('{' + 'pool_id' + '}', CGI.escape(pool_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerPoolMemberCollection' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#list_load_balancer_pool_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List all pools of the load balancer
    # This request lists all pools that belong to the load balancer.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerPoolCollection]
    def list_load_balancer_pools(version, generation, load_balancer_id, opts = {})
      data, _status_code, _headers = list_load_balancer_pools_with_http_info(version, generation, load_balancer_id, opts)
      data
    end

    # List all pools of the load balancer
    # This request lists all pools that belong to the load balancer.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerPoolCollection, Integer, Hash)>] LoadBalancerPoolCollection data, response status code and response headers
    def list_load_balancer_pools_with_http_info(version, generation, load_balancer_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.list_load_balancer_pools ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.list_load_balancer_pools"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.list_load_balancer_pools, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.list_load_balancer_pools"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.list_load_balancer_pools"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/pools'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerPoolCollection' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#list_load_balancer_pools\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List all load balancer profiles
    # This request lists all load balancer profiles available in the region. A load balancer profile specifies the performance characteristics and pricing model for a load balancer.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :start A server-supplied token determining what resource to start the page on
    # @option opts [Integer] :limit The number of resources to return on a page (default to 50)
    # @return [LoadBalancerProfileCollection]
    def list_load_balancer_profiles(version, generation, opts = {})
      data, _status_code, _headers = list_load_balancer_profiles_with_http_info(version, generation, opts)
      data
    end

    # List all load balancer profiles
    # This request lists all load balancer profiles available in the region. A load balancer profile specifies the performance characteristics and pricing model for a load balancer.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :start A server-supplied token determining what resource to start the page on
    # @option opts [Integer] :limit The number of resources to return on a page
    # @return [Array<(LoadBalancerProfileCollection, Integer, Hash)>] LoadBalancerProfileCollection data, response status code and response headers
    def list_load_balancer_profiles_with_http_info(version, generation, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.list_load_balancer_profiles ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.list_load_balancer_profiles"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.list_load_balancer_profiles, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.list_load_balancer_profiles"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] > 100
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling LoadBalancersApi.list_load_balancer_profiles, must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] < 1
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling LoadBalancersApi.list_load_balancer_profiles, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/load_balancer/profiles'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation
      query_params[:'start'] = opts[:'start'] if !opts[:'start'].nil?
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerProfileCollection' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#list_load_balancer_profiles\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List all load balancers
    # This request retrieves a paginated list of all load balancers that belong to this account.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerCollection]
    def list_load_balancers(version, generation, opts = {})
      data, _status_code, _headers = list_load_balancers_with_http_info(version, generation, opts)
      data
    end

    # List all load balancers
    # This request retrieves a paginated list of all load balancers that belong to this account.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerCollection, Integer, Hash)>] LoadBalancerCollection data, response status code and response headers
    def list_load_balancers_with_http_info(version, generation, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.list_load_balancers ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.list_load_balancers"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.list_load_balancers, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.list_load_balancers"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # resource path
      local_var_path = '/load_balancers'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerCollection' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#list_load_balancers\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update members of the load balancer pool
    # This request updates members of the load balancer pool from a collection of member prototype objects.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param pool_id [String] The pool identifier
    # @param load_balancer_pool_member_collection_prototype [LoadBalancerPoolMemberCollectionPrototype] The collection of prototype objects for load balancer pool members. For load balancers in the &#x60;network&#x60; family, the same &#x60;port&#x60; and &#x60;target&#x60; tuple cannot be shared by a member of any other load balancer.
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerPoolMemberCollection]
    def replace_load_balancer_pool_members(version, generation, load_balancer_id, pool_id, load_balancer_pool_member_collection_prototype, opts = {})
      data, _status_code, _headers = replace_load_balancer_pool_members_with_http_info(version, generation, load_balancer_id, pool_id, load_balancer_pool_member_collection_prototype, opts)
      data
    end

    # Update members of the load balancer pool
    # This request updates members of the load balancer pool from a collection of member prototype objects.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param pool_id [String] The pool identifier
    # @param load_balancer_pool_member_collection_prototype [LoadBalancerPoolMemberCollectionPrototype] The collection of prototype objects for load balancer pool members. For load balancers in the &#x60;network&#x60; family, the same &#x60;port&#x60; and &#x60;target&#x60; tuple cannot be shared by a member of any other load balancer.
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerPoolMemberCollection, Integer, Hash)>] LoadBalancerPoolMemberCollection data, response status code and response headers
    def replace_load_balancer_pool_members_with_http_info(version, generation, load_balancer_id, pool_id, load_balancer_pool_member_collection_prototype, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.replace_load_balancer_pool_members ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.replace_load_balancer_pool_members"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.replace_load_balancer_pool_members, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.replace_load_balancer_pool_members"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.replace_load_balancer_pool_members"
      end
      # verify the required parameter 'pool_id' is set
      if @api_client.config.client_side_validation && pool_id.nil?
        fail ArgumentError, "Missing the required parameter 'pool_id' when calling LoadBalancersApi.replace_load_balancer_pool_members"
      end
      # verify the required parameter 'load_balancer_pool_member_collection_prototype' is set
      if @api_client.config.client_side_validation && load_balancer_pool_member_collection_prototype.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_pool_member_collection_prototype' when calling LoadBalancersApi.replace_load_balancer_pool_members"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/pools/{pool_id}/members'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s)).sub('{' + 'pool_id' + '}', CGI.escape(pool_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(load_balancer_pool_member_collection_prototype) 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerPoolMemberCollection' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PUT, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#replace_load_balancer_pool_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update a load balancer
    # This request updates a load balancer.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The load balancer identifier
    # @param load_balancer_patch [LoadBalancerPatch] The load balancer patch
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancer]
    def update_load_balancer(version, generation, id, load_balancer_patch, opts = {})
      data, _status_code, _headers = update_load_balancer_with_http_info(version, generation, id, load_balancer_patch, opts)
      data
    end

    # Update a load balancer
    # This request updates a load balancer.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The load balancer identifier
    # @param load_balancer_patch [LoadBalancerPatch] The load balancer patch
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancer, Integer, Hash)>] LoadBalancer data, response status code and response headers
    def update_load_balancer_with_http_info(version, generation, id, load_balancer_patch, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.update_load_balancer ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.update_load_balancer"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.update_load_balancer, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.update_load_balancer"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling LoadBalancersApi.update_load_balancer"
      end
      # verify the required parameter 'load_balancer_patch' is set
      if @api_client.config.client_side_validation && load_balancer_patch.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_patch' when calling LoadBalancersApi.update_load_balancer"
      end
      # resource path
      local_var_path = '/load_balancers/{id}'.sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(load_balancer_patch) 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancer' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#update_load_balancer\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update a listener
    # This request updates a load balancer listener from a listener patch.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param id [String] The listener identifier
    # @param load_balancer_listener_patch [LoadBalancerListenerPatch] The load balancer listener patch
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerListener]
    def update_load_balancer_listener(version, generation, load_balancer_id, id, load_balancer_listener_patch, opts = {})
      data, _status_code, _headers = update_load_balancer_listener_with_http_info(version, generation, load_balancer_id, id, load_balancer_listener_patch, opts)
      data
    end

    # Update a listener
    # This request updates a load balancer listener from a listener patch.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param id [String] The listener identifier
    # @param load_balancer_listener_patch [LoadBalancerListenerPatch] The load balancer listener patch
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerListener, Integer, Hash)>] LoadBalancerListener data, response status code and response headers
    def update_load_balancer_listener_with_http_info(version, generation, load_balancer_id, id, load_balancer_listener_patch, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.update_load_balancer_listener ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.update_load_balancer_listener"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.update_load_balancer_listener, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.update_load_balancer_listener"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.update_load_balancer_listener"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling LoadBalancersApi.update_load_balancer_listener"
      end
      # verify the required parameter 'load_balancer_listener_patch' is set
      if @api_client.config.client_side_validation && load_balancer_listener_patch.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_listener_patch' when calling LoadBalancersApi.update_load_balancer_listener"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/listeners/{id}'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(load_balancer_listener_patch) 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerListener' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#update_load_balancer_listener\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update a policy of the load balancer listener
    # Updates a policy from a policy patch.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param listener_id [String] The listener identifier
    # @param id [String] The policy identifier
    # @param load_balancer_listener_policy_patch [LoadBalancerListenerPolicyPatch] The listener policy patch
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerListenerPolicy]
    def update_load_balancer_listener_policy(version, generation, load_balancer_id, listener_id, id, load_balancer_listener_policy_patch, opts = {})
      data, _status_code, _headers = update_load_balancer_listener_policy_with_http_info(version, generation, load_balancer_id, listener_id, id, load_balancer_listener_policy_patch, opts)
      data
    end

    # Update a policy of the load balancer listener
    # Updates a policy from a policy patch.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param listener_id [String] The listener identifier
    # @param id [String] The policy identifier
    # @param load_balancer_listener_policy_patch [LoadBalancerListenerPolicyPatch] The listener policy patch
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerListenerPolicy, Integer, Hash)>] LoadBalancerListenerPolicy data, response status code and response headers
    def update_load_balancer_listener_policy_with_http_info(version, generation, load_balancer_id, listener_id, id, load_balancer_listener_policy_patch, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.update_load_balancer_listener_policy ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.update_load_balancer_listener_policy"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.update_load_balancer_listener_policy, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.update_load_balancer_listener_policy"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.update_load_balancer_listener_policy"
      end
      # verify the required parameter 'listener_id' is set
      if @api_client.config.client_side_validation && listener_id.nil?
        fail ArgumentError, "Missing the required parameter 'listener_id' when calling LoadBalancersApi.update_load_balancer_listener_policy"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling LoadBalancersApi.update_load_balancer_listener_policy"
      end
      # verify the required parameter 'load_balancer_listener_policy_patch' is set
      if @api_client.config.client_side_validation && load_balancer_listener_policy_patch.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_listener_policy_patch' when calling LoadBalancersApi.update_load_balancer_listener_policy"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/listeners/{listener_id}/policies/{id}'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s)).sub('{' + 'listener_id' + '}', CGI.escape(listener_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(load_balancer_listener_policy_patch) 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerListenerPolicy' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#update_load_balancer_listener_policy\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update a rule of the load balancer listener policy
    # Updates a rule of the load balancer listener policy.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param listener_id [String] The listener identifier
    # @param policy_id [String] The policy identifier
    # @param id [String] The rule identifier
    # @param load_balancer_listener_policy_rule_patch [LoadBalancerListenerPolicyRulePatch] The listener policy rule patch.
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerListenerPolicyRule]
    def update_load_balancer_listener_policy_rule(version, generation, load_balancer_id, listener_id, policy_id, id, load_balancer_listener_policy_rule_patch, opts = {})
      data, _status_code, _headers = update_load_balancer_listener_policy_rule_with_http_info(version, generation, load_balancer_id, listener_id, policy_id, id, load_balancer_listener_policy_rule_patch, opts)
      data
    end

    # Update a rule of the load balancer listener policy
    # Updates a rule of the load balancer listener policy.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param listener_id [String] The listener identifier
    # @param policy_id [String] The policy identifier
    # @param id [String] The rule identifier
    # @param load_balancer_listener_policy_rule_patch [LoadBalancerListenerPolicyRulePatch] The listener policy rule patch.
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerListenerPolicyRule, Integer, Hash)>] LoadBalancerListenerPolicyRule data, response status code and response headers
    def update_load_balancer_listener_policy_rule_with_http_info(version, generation, load_balancer_id, listener_id, policy_id, id, load_balancer_listener_policy_rule_patch, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.update_load_balancer_listener_policy_rule ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.update_load_balancer_listener_policy_rule"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.update_load_balancer_listener_policy_rule, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.update_load_balancer_listener_policy_rule"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.update_load_balancer_listener_policy_rule"
      end
      # verify the required parameter 'listener_id' is set
      if @api_client.config.client_side_validation && listener_id.nil?
        fail ArgumentError, "Missing the required parameter 'listener_id' when calling LoadBalancersApi.update_load_balancer_listener_policy_rule"
      end
      # verify the required parameter 'policy_id' is set
      if @api_client.config.client_side_validation && policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'policy_id' when calling LoadBalancersApi.update_load_balancer_listener_policy_rule"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling LoadBalancersApi.update_load_balancer_listener_policy_rule"
      end
      # verify the required parameter 'load_balancer_listener_policy_rule_patch' is set
      if @api_client.config.client_side_validation && load_balancer_listener_policy_rule_patch.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_listener_policy_rule_patch' when calling LoadBalancersApi.update_load_balancer_listener_policy_rule"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/listeners/{listener_id}/policies/{policy_id}/rules/{id}'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s)).sub('{' + 'listener_id' + '}', CGI.escape(listener_id.to_s)).sub('{' + 'policy_id' + '}', CGI.escape(policy_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(load_balancer_listener_policy_rule_patch) 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerListenerPolicyRule' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#update_load_balancer_listener_policy_rule\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update a load balancer pool
    # This request updates a load balancer pool from a pool patch.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param id [String] The pool identifier
    # @param load_balancer_pool_patch [LoadBalancerPoolPatch] The load balancer pool patch
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerPool]
    def update_load_balancer_pool(version, generation, load_balancer_id, id, load_balancer_pool_patch, opts = {})
      data, _status_code, _headers = update_load_balancer_pool_with_http_info(version, generation, load_balancer_id, id, load_balancer_pool_patch, opts)
      data
    end

    # Update a load balancer pool
    # This request updates a load balancer pool from a pool patch.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param id [String] The pool identifier
    # @param load_balancer_pool_patch [LoadBalancerPoolPatch] The load balancer pool patch
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerPool, Integer, Hash)>] LoadBalancerPool data, response status code and response headers
    def update_load_balancer_pool_with_http_info(version, generation, load_balancer_id, id, load_balancer_pool_patch, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.update_load_balancer_pool ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.update_load_balancer_pool"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.update_load_balancer_pool, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.update_load_balancer_pool"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.update_load_balancer_pool"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling LoadBalancersApi.update_load_balancer_pool"
      end
      # verify the required parameter 'load_balancer_pool_patch' is set
      if @api_client.config.client_side_validation && load_balancer_pool_patch.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_pool_patch' when calling LoadBalancersApi.update_load_balancer_pool"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/pools/{id}'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(load_balancer_pool_patch) 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerPool' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#update_load_balancer_pool\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update a member in the load balancer pool
    # This request updates an existing member from a member patch.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param pool_id [String] The pool identifier
    # @param id [String] The member identifier
    # @param load_balancer_pool_member_patch [LoadBalancerPoolMemberPatch] The load balancer pool member patch
    # @param [Hash] opts the optional parameters
    # @return [LoadBalancerPoolMember]
    def update_load_balancer_pool_member(version, generation, load_balancer_id, pool_id, id, load_balancer_pool_member_patch, opts = {})
      data, _status_code, _headers = update_load_balancer_pool_member_with_http_info(version, generation, load_balancer_id, pool_id, id, load_balancer_pool_member_patch, opts)
      data
    end

    # Update a member in the load balancer pool
    # This request updates an existing member from a member patch.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param load_balancer_id [String] The load balancer identifier
    # @param pool_id [String] The pool identifier
    # @param id [String] The member identifier
    # @param load_balancer_pool_member_patch [LoadBalancerPoolMemberPatch] The load balancer pool member patch
    # @param [Hash] opts the optional parameters
    # @return [Array<(LoadBalancerPoolMember, Integer, Hash)>] LoadBalancerPoolMember data, response status code and response headers
    def update_load_balancer_pool_member_with_http_info(version, generation, load_balancer_id, pool_id, id, load_balancer_pool_member_patch, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LoadBalancersApi.update_load_balancer_pool_member ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling LoadBalancersApi.update_load_balancer_pool_member"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling LoadBalancersApi.update_load_balancer_pool_member, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling LoadBalancersApi.update_load_balancer_pool_member"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'load_balancer_id' is set
      if @api_client.config.client_side_validation && load_balancer_id.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_id' when calling LoadBalancersApi.update_load_balancer_pool_member"
      end
      # verify the required parameter 'pool_id' is set
      if @api_client.config.client_side_validation && pool_id.nil?
        fail ArgumentError, "Missing the required parameter 'pool_id' when calling LoadBalancersApi.update_load_balancer_pool_member"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling LoadBalancersApi.update_load_balancer_pool_member"
      end
      # verify the required parameter 'load_balancer_pool_member_patch' is set
      if @api_client.config.client_side_validation && load_balancer_pool_member_patch.nil?
        fail ArgumentError, "Missing the required parameter 'load_balancer_pool_member_patch' when calling LoadBalancersApi.update_load_balancer_pool_member"
      end
      # resource path
      local_var_path = '/load_balancers/{load_balancer_id}/pools/{pool_id}/members/{id}'.sub('{' + 'load_balancer_id' + '}', CGI.escape(load_balancer_id.to_s)).sub('{' + 'pool_id' + '}', CGI.escape(pool_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(load_balancer_pool_member_patch) 

      # return_type
      return_type = opts[:return_type] || 'LoadBalancerPoolMember' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LoadBalancersApi#update_load_balancer_pool_member\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end

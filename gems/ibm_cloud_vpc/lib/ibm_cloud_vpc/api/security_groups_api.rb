=begin
#Virtual Private Cloud API

#The IBM Cloud Virtual Private Cloud (VPC) API can be used to programmatically provision and manage infrastructure resources, including virtual server instances, subnets, volumes, and load balancers.

The version of the OpenAPI document: 2020-09-08

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0-beta2

=end

require 'cgi'

module IbmCloudVpc
  class SecurityGroupsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Add a network interface to a security group
    # This request adds an existing network interface to an existing security group. When a network interface is added to a security group, the security group rules are applied to the network interface. A request body is not required, and if supplied, is ignored.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param security_group_id [String] The security group identifier
    # @param id [String] The network interface identifier
    # @param [Hash] opts the optional parameters
    # @return [NetworkInterface]
    def add_security_group_network_interface(version, generation, security_group_id, id, opts = {})
      data, _status_code, _headers = add_security_group_network_interface_with_http_info(version, generation, security_group_id, id, opts)
      data
    end

    # Add a network interface to a security group
    # This request adds an existing network interface to an existing security group. When a network interface is added to a security group, the security group rules are applied to the network interface. A request body is not required, and if supplied, is ignored.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param security_group_id [String] The security group identifier
    # @param id [String] The network interface identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(NetworkInterface, Integer, Hash)>] NetworkInterface data, response status code and response headers
    def add_security_group_network_interface_with_http_info(version, generation, security_group_id, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SecurityGroupsApi.add_security_group_network_interface ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling SecurityGroupsApi.add_security_group_network_interface"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling SecurityGroupsApi.add_security_group_network_interface, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling SecurityGroupsApi.add_security_group_network_interface"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'security_group_id' is set
      if @api_client.config.client_side_validation && security_group_id.nil?
        fail ArgumentError, "Missing the required parameter 'security_group_id' when calling SecurityGroupsApi.add_security_group_network_interface"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling SecurityGroupsApi.add_security_group_network_interface"
      end
      # resource path
      local_var_path = '/security_groups/{security_group_id}/network_interfaces/{id}'.sub('{' + 'security_group_id' + '}', CGI.escape(security_group_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'NetworkInterface' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PUT, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SecurityGroupsApi#add_security_group_network_interface\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create a security group
    # This request creates a new security group from a security group prototype object. The prototype object is structured in the same way as a retrieved security group, and contains the information necessary to create the new security group. If security group rules are included in the protoype object, those rules will be added to the security group. Each security group is scoped to one VPC. Only network interfaces on instances in that VPC can be added to the security group.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param security_group_prototype [SecurityGroupPrototype] The security group prototype object
    # @param [Hash] opts the optional parameters
    # @return [SecurityGroup]
    def create_security_group(version, generation, security_group_prototype, opts = {})
      data, _status_code, _headers = create_security_group_with_http_info(version, generation, security_group_prototype, opts)
      data
    end

    # Create a security group
    # This request creates a new security group from a security group prototype object. The prototype object is structured in the same way as a retrieved security group, and contains the information necessary to create the new security group. If security group rules are included in the protoype object, those rules will be added to the security group. Each security group is scoped to one VPC. Only network interfaces on instances in that VPC can be added to the security group.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param security_group_prototype [SecurityGroupPrototype] The security group prototype object
    # @param [Hash] opts the optional parameters
    # @return [Array<(SecurityGroup, Integer, Hash)>] SecurityGroup data, response status code and response headers
    def create_security_group_with_http_info(version, generation, security_group_prototype, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SecurityGroupsApi.create_security_group ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling SecurityGroupsApi.create_security_group"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling SecurityGroupsApi.create_security_group, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling SecurityGroupsApi.create_security_group"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'security_group_prototype' is set
      if @api_client.config.client_side_validation && security_group_prototype.nil?
        fail ArgumentError, "Missing the required parameter 'security_group_prototype' when calling SecurityGroupsApi.create_security_group"
      end
      # resource path
      local_var_path = '/security_groups'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(security_group_prototype) 

      # return_type
      return_type = opts[:return_type] || 'SecurityGroup' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SecurityGroupsApi#create_security_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create a security group rule
    # This request creates a new security group rule from a security group rule prototype object. The prototype object is structured in the same way as a retrieved security group rule and contains the information necessary to create the rule. As part of creating a new rule in a security group, the rule is applied to all the networking interfaces in the security group. Rules specify which IP traffic a security group should allow. Security group rules are stateful, such that reverse traffic in response to allowed traffic is automatically permitted. A rule allowing inbound TCP traffic on port 80 also allows outbound TCP traffic on port 80 without the need for an additional rule.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param security_group_id [String] The security group identifier
    # @param security_group_rule_prototype [SecurityGroupRulePrototype] The properties of the security group rule to be created.
    # @param [Hash] opts the optional parameters
    # @return [SecurityGroupRule]
    def create_security_group_rule(version, generation, security_group_id, security_group_rule_prototype, opts = {})
      data, _status_code, _headers = create_security_group_rule_with_http_info(version, generation, security_group_id, security_group_rule_prototype, opts)
      data
    end

    # Create a security group rule
    # This request creates a new security group rule from a security group rule prototype object. The prototype object is structured in the same way as a retrieved security group rule and contains the information necessary to create the rule. As part of creating a new rule in a security group, the rule is applied to all the networking interfaces in the security group. Rules specify which IP traffic a security group should allow. Security group rules are stateful, such that reverse traffic in response to allowed traffic is automatically permitted. A rule allowing inbound TCP traffic on port 80 also allows outbound TCP traffic on port 80 without the need for an additional rule.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param security_group_id [String] The security group identifier
    # @param security_group_rule_prototype [SecurityGroupRulePrototype] The properties of the security group rule to be created.
    # @param [Hash] opts the optional parameters
    # @return [Array<(SecurityGroupRule, Integer, Hash)>] SecurityGroupRule data, response status code and response headers
    def create_security_group_rule_with_http_info(version, generation, security_group_id, security_group_rule_prototype, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SecurityGroupsApi.create_security_group_rule ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling SecurityGroupsApi.create_security_group_rule"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling SecurityGroupsApi.create_security_group_rule, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling SecurityGroupsApi.create_security_group_rule"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'security_group_id' is set
      if @api_client.config.client_side_validation && security_group_id.nil?
        fail ArgumentError, "Missing the required parameter 'security_group_id' when calling SecurityGroupsApi.create_security_group_rule"
      end
      # verify the required parameter 'security_group_rule_prototype' is set
      if @api_client.config.client_side_validation && security_group_rule_prototype.nil?
        fail ArgumentError, "Missing the required parameter 'security_group_rule_prototype' when calling SecurityGroupsApi.create_security_group_rule"
      end
      # resource path
      local_var_path = '/security_groups/{security_group_id}/rules'.sub('{' + 'security_group_id' + '}', CGI.escape(security_group_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(security_group_rule_prototype) 

      # return_type
      return_type = opts[:return_type] || 'SecurityGroupRule' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SecurityGroupsApi#create_security_group_rule\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete a security group
    # This request deletes a security group. A security group cannot be deleted if it is referenced by any network interfaces or other security group rules. Additionally, a VPC's default security group cannot be deleted. This operation cannot be reversed.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The security group identifier
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_security_group(version, generation, id, opts = {})
      delete_security_group_with_http_info(version, generation, id, opts)
      nil
    end

    # Delete a security group
    # This request deletes a security group. A security group cannot be deleted if it is referenced by any network interfaces or other security group rules. Additionally, a VPC&#39;s default security group cannot be deleted. This operation cannot be reversed.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The security group identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_security_group_with_http_info(version, generation, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SecurityGroupsApi.delete_security_group ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling SecurityGroupsApi.delete_security_group"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling SecurityGroupsApi.delete_security_group, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling SecurityGroupsApi.delete_security_group"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling SecurityGroupsApi.delete_security_group"
      end
      # resource path
      local_var_path = '/security_groups/{id}'.sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SecurityGroupsApi#delete_security_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete a security group rule
    # This request deletes a security group rule. This operation cannot be reversed. Removing a security group rule will not end existing connections allowed by that rule.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param security_group_id [String] The security group identifier
    # @param id [String] The rule identifier
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_security_group_rule(version, generation, security_group_id, id, opts = {})
      delete_security_group_rule_with_http_info(version, generation, security_group_id, id, opts)
      nil
    end

    # Delete a security group rule
    # This request deletes a security group rule. This operation cannot be reversed. Removing a security group rule will not end existing connections allowed by that rule.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param security_group_id [String] The security group identifier
    # @param id [String] The rule identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_security_group_rule_with_http_info(version, generation, security_group_id, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SecurityGroupsApi.delete_security_group_rule ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling SecurityGroupsApi.delete_security_group_rule"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling SecurityGroupsApi.delete_security_group_rule, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling SecurityGroupsApi.delete_security_group_rule"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'security_group_id' is set
      if @api_client.config.client_side_validation && security_group_id.nil?
        fail ArgumentError, "Missing the required parameter 'security_group_id' when calling SecurityGroupsApi.delete_security_group_rule"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling SecurityGroupsApi.delete_security_group_rule"
      end
      # resource path
      local_var_path = '/security_groups/{security_group_id}/rules/{id}'.sub('{' + 'security_group_id' + '}', CGI.escape(security_group_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SecurityGroupsApi#delete_security_group_rule\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve a security group
    # This request retrieves a single security group specified by the identifier in the URL path.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The security group identifier
    # @param [Hash] opts the optional parameters
    # @return [SecurityGroup]
    def get_security_group(version, generation, id, opts = {})
      data, _status_code, _headers = get_security_group_with_http_info(version, generation, id, opts)
      data
    end

    # Retrieve a security group
    # This request retrieves a single security group specified by the identifier in the URL path.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The security group identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(SecurityGroup, Integer, Hash)>] SecurityGroup data, response status code and response headers
    def get_security_group_with_http_info(version, generation, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SecurityGroupsApi.get_security_group ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling SecurityGroupsApi.get_security_group"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling SecurityGroupsApi.get_security_group, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling SecurityGroupsApi.get_security_group"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling SecurityGroupsApi.get_security_group"
      end
      # resource path
      local_var_path = '/security_groups/{id}'.sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'SecurityGroup' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SecurityGroupsApi#get_security_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve a network interface in a security group
    # This request retrieves a single network interface specified by the identifier in the URL path. The network interface must be an existing member of the security group.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param security_group_id [String] The security group identifier
    # @param id [String] The network interface identifier
    # @param [Hash] opts the optional parameters
    # @return [NetworkInterface]
    def get_security_group_network_interface(version, generation, security_group_id, id, opts = {})
      data, _status_code, _headers = get_security_group_network_interface_with_http_info(version, generation, security_group_id, id, opts)
      data
    end

    # Retrieve a network interface in a security group
    # This request retrieves a single network interface specified by the identifier in the URL path. The network interface must be an existing member of the security group.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param security_group_id [String] The security group identifier
    # @param id [String] The network interface identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(NetworkInterface, Integer, Hash)>] NetworkInterface data, response status code and response headers
    def get_security_group_network_interface_with_http_info(version, generation, security_group_id, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SecurityGroupsApi.get_security_group_network_interface ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling SecurityGroupsApi.get_security_group_network_interface"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling SecurityGroupsApi.get_security_group_network_interface, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling SecurityGroupsApi.get_security_group_network_interface"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'security_group_id' is set
      if @api_client.config.client_side_validation && security_group_id.nil?
        fail ArgumentError, "Missing the required parameter 'security_group_id' when calling SecurityGroupsApi.get_security_group_network_interface"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling SecurityGroupsApi.get_security_group_network_interface"
      end
      # resource path
      local_var_path = '/security_groups/{security_group_id}/network_interfaces/{id}'.sub('{' + 'security_group_id' + '}', CGI.escape(security_group_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'NetworkInterface' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SecurityGroupsApi#get_security_group_network_interface\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve a security group rule
    # This request retrieves a single security group rule specified by the identifier in the URL path.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param security_group_id [String] The security group identifier
    # @param id [String] The rule identifier
    # @param [Hash] opts the optional parameters
    # @return [SecurityGroupRule]
    def get_security_group_rule(version, generation, security_group_id, id, opts = {})
      data, _status_code, _headers = get_security_group_rule_with_http_info(version, generation, security_group_id, id, opts)
      data
    end

    # Retrieve a security group rule
    # This request retrieves a single security group rule specified by the identifier in the URL path.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param security_group_id [String] The security group identifier
    # @param id [String] The rule identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(SecurityGroupRule, Integer, Hash)>] SecurityGroupRule data, response status code and response headers
    def get_security_group_rule_with_http_info(version, generation, security_group_id, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SecurityGroupsApi.get_security_group_rule ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling SecurityGroupsApi.get_security_group_rule"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling SecurityGroupsApi.get_security_group_rule, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling SecurityGroupsApi.get_security_group_rule"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'security_group_id' is set
      if @api_client.config.client_side_validation && security_group_id.nil?
        fail ArgumentError, "Missing the required parameter 'security_group_id' when calling SecurityGroupsApi.get_security_group_rule"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling SecurityGroupsApi.get_security_group_rule"
      end
      # resource path
      local_var_path = '/security_groups/{security_group_id}/rules/{id}'.sub('{' + 'security_group_id' + '}', CGI.escape(security_group_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'SecurityGroupRule' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SecurityGroupsApi#get_security_group_rule\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List a security group's network interfaces
    # This request lists all network interfaces associated with the security group, to which the rules in the security group are applied.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param security_group_id [String] The security group identifier
    # @param [Hash] opts the optional parameters
    # @option opts [String] :start A server-supplied token determining what resource to start the page on
    # @option opts [Integer] :limit The number of resources to return on a page (default to 50)
    # @return [NetworkInterfaceCollection]
    def list_security_group_network_interfaces(version, generation, security_group_id, opts = {})
      data, _status_code, _headers = list_security_group_network_interfaces_with_http_info(version, generation, security_group_id, opts)
      data
    end

    # List a security group&#39;s network interfaces
    # This request lists all network interfaces associated with the security group, to which the rules in the security group are applied.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param security_group_id [String] The security group identifier
    # @param [Hash] opts the optional parameters
    # @option opts [String] :start A server-supplied token determining what resource to start the page on
    # @option opts [Integer] :limit The number of resources to return on a page
    # @return [Array<(NetworkInterfaceCollection, Integer, Hash)>] NetworkInterfaceCollection data, response status code and response headers
    def list_security_group_network_interfaces_with_http_info(version, generation, security_group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SecurityGroupsApi.list_security_group_network_interfaces ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling SecurityGroupsApi.list_security_group_network_interfaces"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling SecurityGroupsApi.list_security_group_network_interfaces, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling SecurityGroupsApi.list_security_group_network_interfaces"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'security_group_id' is set
      if @api_client.config.client_side_validation && security_group_id.nil?
        fail ArgumentError, "Missing the required parameter 'security_group_id' when calling SecurityGroupsApi.list_security_group_network_interfaces"
      end
      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] > 100
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling SecurityGroupsApi.list_security_group_network_interfaces, must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] < 1
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling SecurityGroupsApi.list_security_group_network_interfaces, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/security_groups/{security_group_id}/network_interfaces'.sub('{' + 'security_group_id' + '}', CGI.escape(security_group_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation
      query_params[:'start'] = opts[:'start'] if !opts[:'start'].nil?
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'NetworkInterfaceCollection' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SecurityGroupsApi#list_security_group_network_interfaces\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List all the rules of a security group
    # This request lists all the security group rules for a particular security group. These rules define what traffic the security group permits. Security group rules are stateful, such that reverse traffic in response to allowed traffic is automatically permitted.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param security_group_id [String] The security group identifier
    # @param [Hash] opts the optional parameters
    # @return [SecurityGroupRuleCollection]
    def list_security_group_rules(version, generation, security_group_id, opts = {})
      data, _status_code, _headers = list_security_group_rules_with_http_info(version, generation, security_group_id, opts)
      data
    end

    # List all the rules of a security group
    # This request lists all the security group rules for a particular security group. These rules define what traffic the security group permits. Security group rules are stateful, such that reverse traffic in response to allowed traffic is automatically permitted.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param security_group_id [String] The security group identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(SecurityGroupRuleCollection, Integer, Hash)>] SecurityGroupRuleCollection data, response status code and response headers
    def list_security_group_rules_with_http_info(version, generation, security_group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SecurityGroupsApi.list_security_group_rules ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling SecurityGroupsApi.list_security_group_rules"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling SecurityGroupsApi.list_security_group_rules, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling SecurityGroupsApi.list_security_group_rules"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'security_group_id' is set
      if @api_client.config.client_side_validation && security_group_id.nil?
        fail ArgumentError, "Missing the required parameter 'security_group_id' when calling SecurityGroupsApi.list_security_group_rules"
      end
      # resource path
      local_var_path = '/security_groups/{security_group_id}/rules'.sub('{' + 'security_group_id' + '}', CGI.escape(security_group_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'SecurityGroupRuleCollection' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SecurityGroupsApi#list_security_group_rules\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List all security groups
    # This request lists all existing security groups. Security groups provide a convenient way to apply IP filtering rules to instances in the associated VPC. With security groups, all traffic is denied by default, and rules added to security groups define which traffic the security group permits. Security group rules are stateful such that reverse traffic in response to allowed traffic is automatically permitted.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :start A server-supplied token determining what resource to start the page on
    # @option opts [Integer] :limit The number of resources to return on a page (default to 50)
    # @option opts [String] :resource_group_id Filters the collection to resources within one of the resource groups identified in a comma-separated list of resource group identifiers
    # @option opts [String] :vpc_id Filters the collection to resources in the VPC with the specified identifier
    # @option opts [String] :vpc_crn Filters the collection to resources in the VPC with the specified CRN
    # @option opts [String] :vpc_name Filters the collection to resources in the VPC with the exact specified name
    # @return [SecurityGroupCollection]
    def list_security_groups(version, generation, opts = {})
      data, _status_code, _headers = list_security_groups_with_http_info(version, generation, opts)
      data
    end

    # List all security groups
    # This request lists all existing security groups. Security groups provide a convenient way to apply IP filtering rules to instances in the associated VPC. With security groups, all traffic is denied by default, and rules added to security groups define which traffic the security group permits. Security group rules are stateful such that reverse traffic in response to allowed traffic is automatically permitted.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :start A server-supplied token determining what resource to start the page on
    # @option opts [Integer] :limit The number of resources to return on a page
    # @option opts [String] :resource_group_id Filters the collection to resources within one of the resource groups identified in a comma-separated list of resource group identifiers
    # @option opts [String] :vpc_id Filters the collection to resources in the VPC with the specified identifier
    # @option opts [String] :vpc_crn Filters the collection to resources in the VPC with the specified CRN
    # @option opts [String] :vpc_name Filters the collection to resources in the VPC with the exact specified name
    # @return [Array<(SecurityGroupCollection, Integer, Hash)>] SecurityGroupCollection data, response status code and response headers
    def list_security_groups_with_http_info(version, generation, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SecurityGroupsApi.list_security_groups ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling SecurityGroupsApi.list_security_groups"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling SecurityGroupsApi.list_security_groups, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling SecurityGroupsApi.list_security_groups"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] > 100
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling SecurityGroupsApi.list_security_groups, must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] < 1
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling SecurityGroupsApi.list_security_groups, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/security_groups'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation
      query_params[:'start'] = opts[:'start'] if !opts[:'start'].nil?
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'resource_group.id'] = opts[:'resource_group_id'] if !opts[:'resource_group_id'].nil?
      query_params[:'vpc.id'] = opts[:'vpc_id'] if !opts[:'vpc_id'].nil?
      query_params[:'vpc.crn'] = opts[:'vpc_crn'] if !opts[:'vpc_crn'].nil?
      query_params[:'vpc.name'] = opts[:'vpc_name'] if !opts[:'vpc_name'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'SecurityGroupCollection' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SecurityGroupsApi#list_security_groups\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Remove a network interface from a security group.
    # This request removes a network interface from a security group. Security groups are stateful, so any changes to a network interface's security groups are applied to new connections. Existing connections are not affected. If the network interface being removed has no other security groups, it will be attached to the VPC's default security group.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param security_group_id [String] The security group identifier
    # @param id [String] The network interface identifier
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def remove_security_group_network_interface(version, generation, security_group_id, id, opts = {})
      remove_security_group_network_interface_with_http_info(version, generation, security_group_id, id, opts)
      nil
    end

    # Remove a network interface from a security group.
    # This request removes a network interface from a security group. Security groups are stateful, so any changes to a network interface&#39;s security groups are applied to new connections. Existing connections are not affected. If the network interface being removed has no other security groups, it will be attached to the VPC&#39;s default security group.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param security_group_id [String] The security group identifier
    # @param id [String] The network interface identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def remove_security_group_network_interface_with_http_info(version, generation, security_group_id, id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SecurityGroupsApi.remove_security_group_network_interface ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling SecurityGroupsApi.remove_security_group_network_interface"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling SecurityGroupsApi.remove_security_group_network_interface, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling SecurityGroupsApi.remove_security_group_network_interface"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'security_group_id' is set
      if @api_client.config.client_side_validation && security_group_id.nil?
        fail ArgumentError, "Missing the required parameter 'security_group_id' when calling SecurityGroupsApi.remove_security_group_network_interface"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling SecurityGroupsApi.remove_security_group_network_interface"
      end
      # resource path
      local_var_path = '/security_groups/{security_group_id}/network_interfaces/{id}'.sub('{' + 'security_group_id' + '}', CGI.escape(security_group_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SecurityGroupsApi#remove_security_group_network_interface\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update a security group
    # This request updates a security group with the information provided in a security group patch object. The security group patch object is structured in the same way as a retrieved security group and contains only the information to be updated.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The security group identifier
    # @param security_group_patch [SecurityGroupPatch] The security group patch.
    # @param [Hash] opts the optional parameters
    # @return [SecurityGroup]
    def update_security_group(version, generation, id, security_group_patch, opts = {})
      data, _status_code, _headers = update_security_group_with_http_info(version, generation, id, security_group_patch, opts)
      data
    end

    # Update a security group
    # This request updates a security group with the information provided in a security group patch object. The security group patch object is structured in the same way as a retrieved security group and contains only the information to be updated.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param id [String] The security group identifier
    # @param security_group_patch [SecurityGroupPatch] The security group patch.
    # @param [Hash] opts the optional parameters
    # @return [Array<(SecurityGroup, Integer, Hash)>] SecurityGroup data, response status code and response headers
    def update_security_group_with_http_info(version, generation, id, security_group_patch, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SecurityGroupsApi.update_security_group ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling SecurityGroupsApi.update_security_group"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling SecurityGroupsApi.update_security_group, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling SecurityGroupsApi.update_security_group"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling SecurityGroupsApi.update_security_group"
      end
      # verify the required parameter 'security_group_patch' is set
      if @api_client.config.client_side_validation && security_group_patch.nil?
        fail ArgumentError, "Missing the required parameter 'security_group_patch' when calling SecurityGroupsApi.update_security_group"
      end
      # resource path
      local_var_path = '/security_groups/{id}'.sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(security_group_patch) 

      # return_type
      return_type = opts[:return_type] || 'SecurityGroup' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SecurityGroupsApi#update_security_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update a security group rule
    # This request updates a security group rule with the information in a provided rule patch object. The rule patch object contains only the information to be updated. The request will fail if the information is not applicable to the rule's protocol.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param security_group_id [String] The security group identifier
    # @param id [String] The rule identifier
    # @param security_group_rule_patch [SecurityGroupRulePatch] The security group rule patch.
    # @param [Hash] opts the optional parameters
    # @return [SecurityGroupRule]
    def update_security_group_rule(version, generation, security_group_id, id, security_group_rule_patch, opts = {})
      data, _status_code, _headers = update_security_group_rule_with_http_info(version, generation, security_group_id, id, security_group_rule_patch, opts)
      data
    end

    # Update a security group rule
    # This request updates a security group rule with the information in a provided rule patch object. The rule patch object contains only the information to be updated. The request will fail if the information is not applicable to the rule&#39;s protocol.
    # @param version [String] Requests the version of the API as of a date in the format &#x60;YYYY-MM-DD&#x60;. Any date up to the current date may be provided. Specify the current date to request the latest version.
    # @param generation [Integer] The infrastructure generation for the request. For the API behavior documented here, use &#x60;2&#x60;.
    # @param security_group_id [String] The security group identifier
    # @param id [String] The rule identifier
    # @param security_group_rule_patch [SecurityGroupRulePatch] The security group rule patch.
    # @param [Hash] opts the optional parameters
    # @return [Array<(SecurityGroupRule, Integer, Hash)>] SecurityGroupRule data, response status code and response headers
    def update_security_group_rule_with_http_info(version, generation, security_group_id, id, security_group_rule_patch, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SecurityGroupsApi.update_security_group_rule ...'
      end
      # verify the required parameter 'version' is set
      if @api_client.config.client_side_validation && version.nil?
        fail ArgumentError, "Missing the required parameter 'version' when calling SecurityGroupsApi.update_security_group_rule"
      end
      pattern = Regexp.new(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
      if @api_client.config.client_side_validation && version !~ pattern
        fail ArgumentError, "invalid value for 'version' when calling SecurityGroupsApi.update_security_group_rule, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'generation' is set
      if @api_client.config.client_side_validation && generation.nil?
        fail ArgumentError, "Missing the required parameter 'generation' when calling SecurityGroupsApi.update_security_group_rule"
      end
      # verify enum value
      allowable_values = [2]
      if @api_client.config.client_side_validation && !allowable_values.include?(generation)
        fail ArgumentError, "invalid value for \"generation\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'security_group_id' is set
      if @api_client.config.client_side_validation && security_group_id.nil?
        fail ArgumentError, "Missing the required parameter 'security_group_id' when calling SecurityGroupsApi.update_security_group_rule"
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling SecurityGroupsApi.update_security_group_rule"
      end
      # verify the required parameter 'security_group_rule_patch' is set
      if @api_client.config.client_side_validation && security_group_rule_patch.nil?
        fail ArgumentError, "Missing the required parameter 'security_group_rule_patch' when calling SecurityGroupsApi.update_security_group_rule"
      end
      # resource path
      local_var_path = '/security_groups/{security_group_id}/rules/{id}'.sub('{' + 'security_group_id' + '}', CGI.escape(security_group_id.to_s)).sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'version'] = version
      query_params[:'generation'] = generation

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(security_group_rule_patch) 

      # return_type
      return_type = opts[:return_type] || 'SecurityGroupRule' 

      # auth_names
      auth_names = opts[:auth_names] || ['iamToken']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SecurityGroupsApi#update_security_group_rule\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
